b459292b4dcd9ee9d40192516741d544
/**
 * Mock for Supabase client (browser)
 */ "use strict";
const mockSupabaseClient = {
    auth: {
        getUser: jest.fn(),
        getSession: jest.fn(),
        signInWithPassword: jest.fn(),
        signUp: jest.fn(),
        signOut: jest.fn(),
        onAuthStateChange: jest.fn(()=>({
                data: {
                    subscription: {
                        unsubscribe: jest.fn()
                    }
                }
            }))
    },
    from: jest.fn(()=>mockSupabaseClient),
    select: jest.fn(()=>mockSupabaseClient),
    insert: jest.fn(()=>mockSupabaseClient),
    update: jest.fn(()=>mockSupabaseClient),
    delete: jest.fn(()=>mockSupabaseClient),
    eq: jest.fn(()=>mockSupabaseClient),
    neq: jest.fn(()=>mockSupabaseClient),
    gt: jest.fn(()=>mockSupabaseClient),
    gte: jest.fn(()=>mockSupabaseClient),
    lt: jest.fn(()=>mockSupabaseClient),
    lte: jest.fn(()=>mockSupabaseClient),
    like: jest.fn(()=>mockSupabaseClient),
    ilike: jest.fn(()=>mockSupabaseClient),
    is: jest.fn(()=>mockSupabaseClient),
    in: jest.fn(()=>mockSupabaseClient),
    contains: jest.fn(()=>mockSupabaseClient),
    containedBy: jest.fn(()=>mockSupabaseClient),
    rangeLt: jest.fn(()=>mockSupabaseClient),
    rangeGt: jest.fn(()=>mockSupabaseClient),
    rangeGte: jest.fn(()=>mockSupabaseClient),
    rangeLte: jest.fn(()=>mockSupabaseClient),
    rangeAdjacent: jest.fn(()=>mockSupabaseClient),
    overlaps: jest.fn(()=>mockSupabaseClient),
    textSearch: jest.fn(()=>mockSupabaseClient),
    match: jest.fn(()=>mockSupabaseClient),
    not: jest.fn(()=>mockSupabaseClient),
    or: jest.fn(()=>mockSupabaseClient),
    filter: jest.fn(()=>mockSupabaseClient),
    order: jest.fn(()=>mockSupabaseClient),
    limit: jest.fn(()=>mockSupabaseClient),
    range: jest.fn(()=>mockSupabaseClient),
    single: jest.fn(),
    maybeSingle: jest.fn(),
    csv: jest.fn(),
    geojson: jest.fn(),
    explain: jest.fn(),
    rollback: jest.fn(),
    returns: jest.fn()
};
const createClient = jest.fn(()=>mockSupabaseClient);
const createBrowserClient = jest.fn(()=>mockSupabaseClient);
const createServerClient = jest.fn(()=>mockSupabaseClient);
module.exports = {
    createClient,
    createBrowserClient,
    createServerClient,
    mockSupabaseClient
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9SYXBoYWVsL0RvY3VtZW50cy9ERVYubm9zeW5jL2xhbWFwL19fbW9ja3NfXy9Ac3VwYWJhc2Uvc3NyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTW9jayBmb3IgU3VwYWJhc2UgY2xpZW50IChicm93c2VyKVxuICovXG5cbmNvbnN0IG1vY2tTdXBhYmFzZUNsaWVudCA9IHtcbiAgYXV0aDoge1xuICAgIGdldFVzZXI6IGplc3QuZm4oKSxcbiAgICBnZXRTZXNzaW9uOiBqZXN0LmZuKCksXG4gICAgc2lnbkluV2l0aFBhc3N3b3JkOiBqZXN0LmZuKCksXG4gICAgc2lnblVwOiBqZXN0LmZuKCksXG4gICAgc2lnbk91dDogamVzdC5mbigpLFxuICAgIG9uQXV0aFN0YXRlQ2hhbmdlOiBqZXN0LmZuKCgpID0+ICh7XG4gICAgICBkYXRhOiB7IHN1YnNjcmlwdGlvbjogeyB1bnN1YnNjcmliZTogamVzdC5mbigpIH0gfSxcbiAgICB9KSksXG4gIH0sXG4gIGZyb206IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgc2VsZWN0OiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGluc2VydDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICB1cGRhdGU6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgZGVsZXRlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGVxOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIG5lcTogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBndDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBndGU6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgbHQ6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgbHRlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGxpa2U6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgaWxpa2U6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgaXM6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgaW46IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgY29udGFpbnM6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgY29udGFpbmVkQnk6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgcmFuZ2VMdDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICByYW5nZUd0OiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlR3RlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlTHRlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlQWRqYWNlbnQ6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgb3ZlcmxhcHM6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgdGV4dFNlYXJjaDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBtYXRjaDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBub3Q6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgb3I6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgZmlsdGVyOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIG9yZGVyOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGxpbWl0OiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHNpbmdsZTogamVzdC5mbigpLFxuICBtYXliZVNpbmdsZTogamVzdC5mbigpLFxuICBjc3Y6IGplc3QuZm4oKSxcbiAgZ2VvanNvbjogamVzdC5mbigpLFxuICBleHBsYWluOiBqZXN0LmZuKCksXG4gIHJvbGxiYWNrOiBqZXN0LmZuKCksXG4gIHJldHVybnM6IGplc3QuZm4oKSxcbn07XG5cbmNvbnN0IGNyZWF0ZUNsaWVudCA9IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KTtcbmNvbnN0IGNyZWF0ZUJyb3dzZXJDbGllbnQgPSBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCk7XG5jb25zdCBjcmVhdGVTZXJ2ZXJDbGllbnQgPSBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjcmVhdGVDbGllbnQsXG4gIGNyZWF0ZUJyb3dzZXJDbGllbnQsXG4gIGNyZWF0ZVNlcnZlckNsaWVudCxcbiAgbW9ja1N1cGFiYXNlQ2xpZW50LFxufTtcbiJdLCJuYW1lcyI6WyJtb2NrU3VwYWJhc2VDbGllbnQiLCJhdXRoIiwiZ2V0VXNlciIsImplc3QiLCJmbiIsImdldFNlc3Npb24iLCJzaWduSW5XaXRoUGFzc3dvcmQiLCJzaWduVXAiLCJzaWduT3V0Iiwib25BdXRoU3RhdGVDaGFuZ2UiLCJkYXRhIiwic3Vic2NyaXB0aW9uIiwidW5zdWJzY3JpYmUiLCJmcm9tIiwic2VsZWN0IiwiaW5zZXJ0IiwidXBkYXRlIiwiZGVsZXRlIiwiZXEiLCJuZXEiLCJndCIsImd0ZSIsImx0IiwibHRlIiwibGlrZSIsImlsaWtlIiwiaXMiLCJpbiIsImNvbnRhaW5zIiwiY29udGFpbmVkQnkiLCJyYW5nZUx0IiwicmFuZ2VHdCIsInJhbmdlR3RlIiwicmFuZ2VMdGUiLCJyYW5nZUFkamFjZW50Iiwib3ZlcmxhcHMiLCJ0ZXh0U2VhcmNoIiwibWF0Y2giLCJub3QiLCJvciIsImZpbHRlciIsIm9yZGVyIiwibGltaXQiLCJyYW5nZSIsInNpbmdsZSIsIm1heWJlU2luZ2xlIiwiY3N2IiwiZ2VvanNvbiIsImV4cGxhaW4iLCJyb2xsYmFjayIsInJldHVybnMiLCJjcmVhdGVDbGllbnQiLCJjcmVhdGVCcm93c2VyQ2xpZW50IiwiY3JlYXRlU2VydmVyQ2xpZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0NBRUM7QUFFRCxNQUFNQSxxQkFBcUI7SUFDekJDLE1BQU07UUFDSkMsU0FBU0MsS0FBS0MsRUFBRTtRQUNoQkMsWUFBWUYsS0FBS0MsRUFBRTtRQUNuQkUsb0JBQW9CSCxLQUFLQyxFQUFFO1FBQzNCRyxRQUFRSixLQUFLQyxFQUFFO1FBQ2ZJLFNBQVNMLEtBQUtDLEVBQUU7UUFDaEJLLG1CQUFtQk4sS0FBS0MsRUFBRSxDQUFDLElBQU8sQ0FBQTtnQkFDaENNLE1BQU07b0JBQUVDLGNBQWM7d0JBQUVDLGFBQWFULEtBQUtDLEVBQUU7b0JBQUc7Z0JBQUU7WUFDbkQsQ0FBQTtJQUNGO0lBQ0FTLE1BQU1WLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNwQmMsUUFBUVgsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3RCZSxRQUFRWixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDdEJnQixRQUFRYixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDdEJpQixRQUFRZCxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDdEJrQixJQUFJZixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDbEJtQixLQUFLaEIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ25Cb0IsSUFBSWpCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNsQnFCLEtBQUtsQixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDbkJzQixJQUFJbkIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ2xCdUIsS0FBS3BCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNuQndCLE1BQU1yQixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDcEJ5QixPQUFPdEIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3JCMEIsSUFBSXZCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNsQjJCLElBQUl4QixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDbEI0QixVQUFVekIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3hCNkIsYUFBYTFCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUMzQjhCLFNBQVMzQixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDdkIrQixTQUFTNUIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3ZCZ0MsVUFBVTdCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUN4QmlDLFVBQVU5QixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDeEJrQyxlQUFlL0IsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQzdCbUMsVUFBVWhDLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUN4Qm9DLFlBQVlqQyxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDMUJxQyxPQUFPbEMsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3JCc0MsS0FBS25DLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNuQnVDLElBQUlwQyxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDbEJ3QyxRQUFRckMsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3RCeUMsT0FBT3RDLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNyQjBDLE9BQU92QyxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDckIyQyxPQUFPeEMsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3JCNEMsUUFBUXpDLEtBQUtDLEVBQUU7SUFDZnlDLGFBQWExQyxLQUFLQyxFQUFFO0lBQ3BCMEMsS0FBSzNDLEtBQUtDLEVBQUU7SUFDWjJDLFNBQVM1QyxLQUFLQyxFQUFFO0lBQ2hCNEMsU0FBUzdDLEtBQUtDLEVBQUU7SUFDaEI2QyxVQUFVOUMsS0FBS0MsRUFBRTtJQUNqQjhDLFNBQVMvQyxLQUFLQyxFQUFFO0FBQ2xCO0FBRUEsTUFBTStDLGVBQWVoRCxLQUFLQyxFQUFFLENBQUMsSUFBTUo7QUFDbkMsTUFBTW9ELHNCQUFzQmpELEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtBQUMxQyxNQUFNcUQscUJBQXFCbEQsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0FBRXpDc0QsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZKO0lBQ0FDO0lBQ0FDO0lBQ0FyRDtBQUNGIn0=