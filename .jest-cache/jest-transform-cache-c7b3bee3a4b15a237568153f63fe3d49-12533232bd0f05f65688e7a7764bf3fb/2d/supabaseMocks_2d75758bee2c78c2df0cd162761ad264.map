{"version":3,"sources":["/Users/Raphael/Documents/DEV.nosync/lamap/src/__tests__/setup/supabaseMocks.ts"],"sourcesContent":["/**\n * Mock setup for Supabase modules\n * This file provides a centralized mock configuration for all Supabase imports\n */\n\n// Mock Supabase browser client\nexport const mockSupabaseBrowserClient: any = {\n  auth: {\n    getUser: jest.fn(() =>\n      Promise.resolve({\n        data: { user: { id: 'test-user-id', email: 'test@example.com' } },\n        error: null,\n      })\n    ),\n    getSession: jest.fn(() =>\n      Promise.resolve({\n        data: {\n          session: {\n            user: { id: 'test-user-id', email: 'test@example.com' },\n            access_token: 'test-token',\n          },\n        },\n        error: null,\n      })\n    ),\n    signInWithPassword: jest.fn(),\n    signUp: jest.fn(),\n    signOut: jest.fn(),\n    onAuthStateChange: jest.fn(() => ({\n      data: { subscription: { unsubscribe: jest.fn() } },\n    })),\n  },\n  from: jest.fn(() => mockSupabaseBrowserClient),\n  select: jest.fn(() => mockSupabaseBrowserClient),\n  insert: jest.fn(() => mockSupabaseBrowserClient),\n  update: jest.fn(() => mockSupabaseBrowserClient),\n  delete: jest.fn(() => mockSupabaseBrowserClient),\n  eq: jest.fn(() => mockSupabaseBrowserClient),\n  single: jest.fn(() =>\n    Promise.resolve({\n      data: null,\n      error: null,\n    })\n  ),\n  // Add more methods as needed\n};\n\n// Mock Supabase server client\nexport const mockSupabaseServerClient: any = {\n  auth: {\n    getUser: jest.fn(() =>\n      Promise.resolve({\n        data: { user: { id: 'test-user-id', email: 'test@example.com' } },\n        error: null,\n      })\n    ),\n    getSession: jest.fn(() =>\n      Promise.resolve({\n        data: {\n          session: {\n            user: { id: 'test-user-id', email: 'test@example.com' },\n            access_token: 'test-token',\n          },\n        },\n        error: null,\n      })\n    ),\n  },\n  from: jest.fn(() => mockSupabaseServerClient),\n  select: jest.fn(() => mockSupabaseServerClient),\n  insert: jest.fn(() => mockSupabaseServerClient),\n  update: jest.fn(() => mockSupabaseServerClient),\n  delete: jest.fn(() => mockSupabaseServerClient),\n  eq: jest.fn(() => mockSupabaseServerClient),\n  single: jest.fn(() =>\n    Promise.resolve({\n      data: null,\n      error: null,\n    })\n  ),\n  // Add more methods as needed\n};\n\n// Export factory functions\nexport const createMockBrowserClient = () => mockSupabaseBrowserClient;\nexport const createMockServerClient = () =>\n  Promise.resolve(mockSupabaseServerClient);\n"],"names":["createMockBrowserClient","createMockServerClient","mockSupabaseBrowserClient","mockSupabaseServerClient","auth","getUser","jest","fn","Promise","resolve","data","user","id","email","error","getSession","session","access_token","signInWithPassword","signUp","signOut","onAuthStateChange","subscription","unsubscribe","from","select","insert","update","delete","eq","single"],"mappings":"AAAA;;;CAGC,GAED,+BAA+B;;;;;;;;;;;;QA+ElBA;eAAAA;;QACAC;eAAAA;;QA/EAC;eAAAA;;QA0CAC;eAAAA;;;AA1CN,MAAMD,4BAAiC;IAC5CE,MAAM;QACJC,SAASC,KAAKC,EAAE,CAAC,IACfC,QAAQC,OAAO,CAAC;gBACdC,MAAM;oBAAEC,MAAM;wBAAEC,IAAI;wBAAgBC,OAAO;oBAAmB;gBAAE;gBAChEC,OAAO;YACT;QAEFC,YAAYT,KAAKC,EAAE,CAAC,IAClBC,QAAQC,OAAO,CAAC;gBACdC,MAAM;oBACJM,SAAS;wBACPL,MAAM;4BAAEC,IAAI;4BAAgBC,OAAO;wBAAmB;wBACtDI,cAAc;oBAChB;gBACF;gBACAH,OAAO;YACT;QAEFI,oBAAoBZ,KAAKC,EAAE;QAC3BY,QAAQb,KAAKC,EAAE;QACfa,SAASd,KAAKC,EAAE;QAChBc,mBAAmBf,KAAKC,EAAE,CAAC,IAAO,CAAA;gBAChCG,MAAM;oBAAEY,cAAc;wBAAEC,aAAajB,KAAKC,EAAE;oBAAG;gBAAE;YACnD,CAAA;IACF;IACAiB,MAAMlB,KAAKC,EAAE,CAAC,IAAML;IACpBuB,QAAQnB,KAAKC,EAAE,CAAC,IAAML;IACtBwB,QAAQpB,KAAKC,EAAE,CAAC,IAAML;IACtByB,QAAQrB,KAAKC,EAAE,CAAC,IAAML;IACtB0B,QAAQtB,KAAKC,EAAE,CAAC,IAAML;IACtB2B,IAAIvB,KAAKC,EAAE,CAAC,IAAML;IAClB4B,QAAQxB,KAAKC,EAAE,CAAC,IACdC,QAAQC,OAAO,CAAC;YACdC,MAAM;YACNI,OAAO;QACT;AAGJ;AAGO,MAAMX,2BAAgC;IAC3CC,MAAM;QACJC,SAASC,KAAKC,EAAE,CAAC,IACfC,QAAQC,OAAO,CAAC;gBACdC,MAAM;oBAAEC,MAAM;wBAAEC,IAAI;wBAAgBC,OAAO;oBAAmB;gBAAE;gBAChEC,OAAO;YACT;QAEFC,YAAYT,KAAKC,EAAE,CAAC,IAClBC,QAAQC,OAAO,CAAC;gBACdC,MAAM;oBACJM,SAAS;wBACPL,MAAM;4BAAEC,IAAI;4BAAgBC,OAAO;wBAAmB;wBACtDI,cAAc;oBAChB;gBACF;gBACAH,OAAO;YACT;IAEJ;IACAU,MAAMlB,KAAKC,EAAE,CAAC,IAAMJ;IACpBsB,QAAQnB,KAAKC,EAAE,CAAC,IAAMJ;IACtBuB,QAAQpB,KAAKC,EAAE,CAAC,IAAMJ;IACtBwB,QAAQrB,KAAKC,EAAE,CAAC,IAAMJ;IACtByB,QAAQtB,KAAKC,EAAE,CAAC,IAAMJ;IACtB0B,IAAIvB,KAAKC,EAAE,CAAC,IAAMJ;IAClB2B,QAAQxB,KAAKC,EAAE,CAAC,IACdC,QAAQC,OAAO,CAAC;YACdC,MAAM;YACNI,OAAO;QACT;AAGJ;AAGO,MAAMd,0BAA0B,IAAME;AACtC,MAAMD,yBAAyB,IACpCO,QAAQC,OAAO,CAACN"}