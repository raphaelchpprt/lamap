cd84df4b6ea1c2a7e51303118365cf90
/**
 * Mock for Supabase client (browser)
 */ "use strict";
const mockSupabaseClient = {
    auth: {
        getUser: jest.fn(),
        getSession: jest.fn(),
        signInWithPassword: jest.fn(),
        signUp: jest.fn(),
        signOut: jest.fn(),
        onAuthStateChange: jest.fn(()=>({
                data: {
                    subscription: {
                        unsubscribe: jest.fn()
                    }
                }
            }))
    },
    from: jest.fn(()=>mockSupabaseClient),
    select: jest.fn(()=>mockSupabaseClient),
    insert: jest.fn(()=>mockSupabaseClient),
    update: jest.fn(()=>mockSupabaseClient),
    delete: jest.fn(()=>mockSupabaseClient),
    eq: jest.fn(()=>mockSupabaseClient),
    neq: jest.fn(()=>mockSupabaseClient),
    gt: jest.fn(()=>mockSupabaseClient),
    gte: jest.fn(()=>mockSupabaseClient),
    lt: jest.fn(()=>mockSupabaseClient),
    lte: jest.fn(()=>mockSupabaseClient),
    like: jest.fn(()=>mockSupabaseClient),
    ilike: jest.fn(()=>mockSupabaseClient),
    is: jest.fn(()=>mockSupabaseClient),
    in: jest.fn(()=>mockSupabaseClient),
    contains: jest.fn(()=>mockSupabaseClient),
    containedBy: jest.fn(()=>mockSupabaseClient),
    rangeLt: jest.fn(()=>mockSupabaseClient),
    rangeGt: jest.fn(()=>mockSupabaseClient),
    rangeGte: jest.fn(()=>mockSupabaseClient),
    rangeLte: jest.fn(()=>mockSupabaseClient),
    rangeAdjacent: jest.fn(()=>mockSupabaseClient),
    overlaps: jest.fn(()=>mockSupabaseClient),
    textSearch: jest.fn(()=>mockSupabaseClient),
    match: jest.fn(()=>mockSupabaseClient),
    not: jest.fn(()=>mockSupabaseClient),
    or: jest.fn(()=>mockSupabaseClient),
    filter: jest.fn(()=>mockSupabaseClient),
    order: jest.fn(()=>mockSupabaseClient),
    limit: jest.fn(()=>mockSupabaseClient),
    range: jest.fn(()=>mockSupabaseClient),
    single: jest.fn(),
    maybeSingle: jest.fn(),
    csv: jest.fn(),
    geojson: jest.fn(),
    explain: jest.fn(),
    rollback: jest.fn(),
    returns: jest.fn()
};
const createClient = jest.fn(()=>mockSupabaseClient);
module.exports = {
    createClient,
    mockSupabaseClient
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9SYXBoYWVsL0RvY3VtZW50cy9ERVYubm9zeW5jL2xhbWFwL19fbW9ja3NfXy9Ac3VwYWJhc2Uvc3NyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTW9jayBmb3IgU3VwYWJhc2UgY2xpZW50IChicm93c2VyKVxuICovXG5cbmNvbnN0IG1vY2tTdXBhYmFzZUNsaWVudCA9IHtcbiAgYXV0aDoge1xuICAgIGdldFVzZXI6IGplc3QuZm4oKSxcbiAgICBnZXRTZXNzaW9uOiBqZXN0LmZuKCksXG4gICAgc2lnbkluV2l0aFBhc3N3b3JkOiBqZXN0LmZuKCksXG4gICAgc2lnblVwOiBqZXN0LmZuKCksXG4gICAgc2lnbk91dDogamVzdC5mbigpLFxuICAgIG9uQXV0aFN0YXRlQ2hhbmdlOiBqZXN0LmZuKCgpID0+ICh7XG4gICAgICBkYXRhOiB7IHN1YnNjcmlwdGlvbjogeyB1bnN1YnNjcmliZTogamVzdC5mbigpIH0gfSxcbiAgICB9KSksXG4gIH0sXG4gIGZyb206IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgc2VsZWN0OiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGluc2VydDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICB1cGRhdGU6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgZGVsZXRlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGVxOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIG5lcTogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBndDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBndGU6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgbHQ6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgbHRlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGxpa2U6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgaWxpa2U6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgaXM6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgaW46IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgY29udGFpbnM6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgY29udGFpbmVkQnk6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgcmFuZ2VMdDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICByYW5nZUd0OiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlR3RlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlTHRlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlQWRqYWNlbnQ6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgb3ZlcmxhcHM6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgdGV4dFNlYXJjaDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBtYXRjaDogamVzdC5mbigoKSA9PiBtb2NrU3VwYWJhc2VDbGllbnQpLFxuICBub3Q6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgb3I6IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KSxcbiAgZmlsdGVyOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIG9yZGVyOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIGxpbWl0OiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHJhbmdlOiBqZXN0LmZuKCgpID0+IG1vY2tTdXBhYmFzZUNsaWVudCksXG4gIHNpbmdsZTogamVzdC5mbigpLFxuICBtYXliZVNpbmdsZTogamVzdC5mbigpLFxuICBjc3Y6IGplc3QuZm4oKSxcbiAgZ2VvanNvbjogamVzdC5mbigpLFxuICBleHBsYWluOiBqZXN0LmZuKCksXG4gIHJvbGxiYWNrOiBqZXN0LmZuKCksXG4gIHJldHVybnM6IGplc3QuZm4oKSxcbn07XG5cbmNvbnN0IGNyZWF0ZUNsaWVudCA9IGplc3QuZm4oKCkgPT4gbW9ja1N1cGFiYXNlQ2xpZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZUNsaWVudCxcbiAgbW9ja1N1cGFiYXNlQ2xpZW50LFxufTtcbiJdLCJuYW1lcyI6WyJtb2NrU3VwYWJhc2VDbGllbnQiLCJhdXRoIiwiZ2V0VXNlciIsImplc3QiLCJmbiIsImdldFNlc3Npb24iLCJzaWduSW5XaXRoUGFzc3dvcmQiLCJzaWduVXAiLCJzaWduT3V0Iiwib25BdXRoU3RhdGVDaGFuZ2UiLCJkYXRhIiwic3Vic2NyaXB0aW9uIiwidW5zdWJzY3JpYmUiLCJmcm9tIiwic2VsZWN0IiwiaW5zZXJ0IiwidXBkYXRlIiwiZGVsZXRlIiwiZXEiLCJuZXEiLCJndCIsImd0ZSIsImx0IiwibHRlIiwibGlrZSIsImlsaWtlIiwiaXMiLCJpbiIsImNvbnRhaW5zIiwiY29udGFpbmVkQnkiLCJyYW5nZUx0IiwicmFuZ2VHdCIsInJhbmdlR3RlIiwicmFuZ2VMdGUiLCJyYW5nZUFkamFjZW50Iiwib3ZlcmxhcHMiLCJ0ZXh0U2VhcmNoIiwibWF0Y2giLCJub3QiLCJvciIsImZpbHRlciIsIm9yZGVyIiwibGltaXQiLCJyYW5nZSIsInNpbmdsZSIsIm1heWJlU2luZ2xlIiwiY3N2IiwiZ2VvanNvbiIsImV4cGxhaW4iLCJyb2xsYmFjayIsInJldHVybnMiLCJjcmVhdGVDbGllbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Q0FFQztBQUVELE1BQU1BLHFCQUFxQjtJQUN6QkMsTUFBTTtRQUNKQyxTQUFTQyxLQUFLQyxFQUFFO1FBQ2hCQyxZQUFZRixLQUFLQyxFQUFFO1FBQ25CRSxvQkFBb0JILEtBQUtDLEVBQUU7UUFDM0JHLFFBQVFKLEtBQUtDLEVBQUU7UUFDZkksU0FBU0wsS0FBS0MsRUFBRTtRQUNoQkssbUJBQW1CTixLQUFLQyxFQUFFLENBQUMsSUFBTyxDQUFBO2dCQUNoQ00sTUFBTTtvQkFBRUMsY0FBYzt3QkFBRUMsYUFBYVQsS0FBS0MsRUFBRTtvQkFBRztnQkFBRTtZQUNuRCxDQUFBO0lBQ0Y7SUFDQVMsTUFBTVYsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3BCYyxRQUFRWCxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDdEJlLFFBQVFaLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUN0QmdCLFFBQVFiLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUN0QmlCLFFBQVFkLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUN0QmtCLElBQUlmLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNsQm1CLEtBQUtoQixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDbkJvQixJQUFJakIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ2xCcUIsS0FBS2xCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNuQnNCLElBQUluQixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDbEJ1QixLQUFLcEIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ25Cd0IsTUFBTXJCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNwQnlCLE9BQU90QixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDckIwQixJQUFJdkIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ2xCMkIsSUFBSXhCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNsQjRCLFVBQVV6QixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDeEI2QixhQUFhMUIsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQzNCOEIsU0FBUzNCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUN2QitCLFNBQVM1QixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDdkJnQyxVQUFVN0IsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3hCaUMsVUFBVTlCLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUN4QmtDLGVBQWUvQixLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDN0JtQyxVQUFVaEMsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3hCb0MsWUFBWWpDLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUMxQnFDLE9BQU9sQyxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDckJzQyxLQUFLbkMsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ25CdUMsSUFBSXBDLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNsQndDLFFBQVFyQyxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDdEJ5QyxPQUFPdEMsS0FBS0MsRUFBRSxDQUFDLElBQU1KO0lBQ3JCMEMsT0FBT3ZDLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtJQUNyQjJDLE9BQU94QyxLQUFLQyxFQUFFLENBQUMsSUFBTUo7SUFDckI0QyxRQUFRekMsS0FBS0MsRUFBRTtJQUNmeUMsYUFBYTFDLEtBQUtDLEVBQUU7SUFDcEIwQyxLQUFLM0MsS0FBS0MsRUFBRTtJQUNaMkMsU0FBUzVDLEtBQUtDLEVBQUU7SUFDaEI0QyxTQUFTN0MsS0FBS0MsRUFBRTtJQUNoQjZDLFVBQVU5QyxLQUFLQyxFQUFFO0lBQ2pCOEMsU0FBUy9DLEtBQUtDLEVBQUU7QUFDbEI7QUFFQSxNQUFNK0MsZUFBZWhELEtBQUtDLEVBQUUsQ0FBQyxJQUFNSjtBQUVuQ29ELE9BQU9DLE9BQU8sR0FBRztJQUNmRjtJQUNBbkQ7QUFDRiJ9