{"version":3,"sources":["/Users/Raphael/Documents/DEV.nosync/lamap/src/components/Initiative/InitiativeCard.tsx"],"sourcesContent":["'use client';\n\n/**\n * Initiative ESS Card Component\n *\n * Displays information about an initiative in a compact and attractive way.\n * Supports different display modes (card, popup, list).\n */\n\nimport {\n  MapPin,\n  Clock,\n  Globe,\n  Phone,\n  Mail,\n  ExternalLink,\n  Check,\n} from 'lucide-react';\nimport Image from 'next/image';\nimport { useState } from 'react';\n\nimport { INITIATIVE_COLORS } from '@/types/initiative';\n\nimport type { Initiative, OpeningHours } from '@/types/initiative';\n\n// ================================\n// TYPES\n// ================================\n\ninterface InitiativeCardProps {\n  /** Initiative data */\n  initiative: Initiative;\n\n  /** Display variant */\n  variant?: 'card' | 'popup' | 'list' | 'detailed';\n\n  /** Custom CSS classes */\n  className?: string;\n\n  /** Show distance if available */\n  distance?: number;\n\n  /** Click callback on card */\n  onClick?: (initiative: Initiative) => void;\n\n  /** Show edit actions */\n  showActions?: boolean;\n\n  /** Edit callback */\n  onEdit?: (initiative: Initiative) => void;\n\n  /** Delete callback */\n  onDelete?: (initiative: Initiative) => void;\n}\n\n// ================================\n// UTILITIES\n// ================================\n\n/**\n * Format distance as readable text\n */\nfunction formatDistance(meters: number): string {\n  if (meters < 1000) {\n    return `${Math.round(meters)} m`;\n  }\n  return `${(meters / 1000).toFixed(1)} km`;\n}\n\n/**\n * Determine if initiative is currently open\n */\nfunction isOpenNow(openingHours: OpeningHours | undefined): boolean {\n  if (!openingHours) return false;\n\n  const now = new Date();\n  const day = now\n    .toLocaleDateString('fr-FR', { weekday: 'long' })\n    .toLowerCase();\n  const currentTime = now.toTimeString().slice(0, 5); // HH:MM\n\n  const dayMapping: Record<string, keyof OpeningHours> = {\n    lundi: 'monday',\n    mardi: 'tuesday',\n    mercredi: 'wednesday',\n    jeudi: 'thursday',\n    vendredi: 'friday',\n    samedi: 'saturday',\n    dimanche: 'sunday',\n  };\n\n  const mappedDay = dayMapping[day];\n  if (!mappedDay) return false;\n\n  const todayHours = openingHours[mappedDay];\n  if (!todayHours) return false;\n\n  return currentTime >= todayHours.open && currentTime <= todayHours.close;\n}\n\n/**\n * Format opening hours for display\n */\nfunction formatOpeningHours(openingHours: OpeningHours | undefined): string {\n  if (!openingHours) return 'Hours not provided';\n\n  const days = [\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n    'sunday',\n  ];\n  const dayNames = ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'];\n\n  const hoursText = days\n    .map((day, index) => {\n      const hours = openingHours[day as keyof OpeningHours];\n      if (!hours) return `${dayNames[index]}: Fermé`;\n      return `${dayNames[index]}: ${hours.open}-${hours.close}`;\n    })\n    .join('\\n');\n\n  return hoursText;\n}\n\n// ================================\n// COMPOSANTS\n// ================================\n\n/**\n * Badge de type d'initiative\n */\nfunction TypeBadge({ type }: { type: Initiative['type'] }) {\n  const color = INITIATIVE_COLORS[type];\n\n  return (\n    <span\n      className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-white\"\n      style={{ backgroundColor: color }}\n    >\n      {type}\n    </span>\n  );\n}\n\n/**\n * Badge de vérification\n */\nfunction VerifiedBadge({ verified }: { verified: boolean }) {\n  if (!verified) return null;\n\n  return (\n    <div\n      className=\"inline-flex items-center gap-1 px-2 py-1 bg-green-100 text-green-800 text-xs rounded-md\"\n      title=\"Initiative vérifiée par l'équipe LaMap\"\n    >\n      <Check size={12} />\n      <span>Vérifiée</span>\n    </div>\n  );\n}\n\n/**\n * Informations de contact rapide\n */\nfunction QuickContact({ initiative }: { initiative: Initiative }) {\n  const hasContact = initiative.phone || initiative.email || initiative.website;\n\n  if (!hasContact) return null;\n\n  return (\n    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n      {initiative.phone && (\n        <a\n          href={`tel:${initiative.phone}`}\n          className=\"flex items-center gap-1 hover:text-primary-600 transition-colors\"\n          title=\"Appeler\"\n        >\n          <Phone size={14} />\n        </a>\n      )}\n\n      {initiative.email && (\n        <a\n          href={`mailto:${initiative.email}`}\n          className=\"flex items-center gap-1 hover:text-primary-600 transition-colors\"\n          title=\"Envoyer un email\"\n        >\n          <Mail size={14} />\n        </a>\n      )}\n\n      {initiative.website && (\n        <a\n          href={initiative.website}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"flex items-center gap-1 hover:text-primary-600 transition-colors\"\n          title=\"Visiter le site web\"\n        >\n          <Globe size={14} />\n          <ExternalLink size={12} />\n        </a>\n      )}\n    </div>\n  );\n}\n\n// ================================\n// COMPOSANT PRINCIPAL\n// ================================\n\nexport default function InitiativeCard({\n  initiative,\n  variant = 'card',\n  className = '',\n  distance,\n  onClick,\n  showActions = false,\n  onEdit,\n  onDelete,\n}: InitiativeCardProps) {\n  const [imageError, setImageError] = useState(false);\n  const [showFullDescription, setShowFullDescription] = useState(false);\n\n  // Classes CSS selon le variant\n  const variantClasses = {\n    card: 'bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 overflow-hidden',\n    popup: 'bg-white rounded-lg shadow-lg overflow-hidden max-w-sm',\n    list: 'bg-white rounded-md border border-gray-200 hover:border-gray-300 transition-colors',\n    detailed: 'bg-white rounded-lg shadow-sm border border-gray-200',\n  };\n\n  const containerClass = `${variantClasses[variant]} ${className}`;\n\n  // Gestion du clic\n  const handleClick = () => {\n    if (onClick) {\n      onClick(initiative);\n    }\n  };\n\n  // Texte de description tronqué\n  const description = initiative.description || '';\n  const truncatedDescription =\n    description.length > 120 && !showFullDescription\n      ? `${description.slice(0, 120)}...`\n      : description;\n\n  const isOpen = isOpenNow(initiative.opening_hours);\n\n  // ================================\n  // VARIANT LIST\n  // ================================\n\n  if (variant === 'list') {\n    return (\n      <div\n        className={containerClass}\n        onClick={handleClick}\n        role={onClick ? 'button' : undefined}\n        tabIndex={onClick ? 0 : undefined}\n      >\n        <div className=\"p-4\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <TypeBadge type={initiative.type} />\n                <VerifiedBadge verified={initiative.verified} />\n              </div>\n\n              <h3 className=\"text-lg font-semibold text-gray-900 truncate\">\n                {initiative.name}\n              </h3>\n\n              {initiative.address && (\n                <div className=\"flex items-center gap-1 mt-1 text-sm text-gray-600\">\n                  <MapPin size={14} />\n                  <span className=\"truncate\">{initiative.address}</span>\n                  {distance && (\n                    <span className=\"ml-2 text-primary-600 font-medium\">\n                      • {formatDistance(distance)}\n                    </span>\n                  )}\n                </div>\n              )}\n            </div>\n\n            <QuickContact initiative={initiative} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // ================================\n  // VARIANT POPUP\n  // ================================\n\n  if (variant === 'popup') {\n    return (\n      <div className={containerClass}>\n        {/* Image */}\n        {initiative.image_url && !imageError && (\n          <div className=\"relative h-32 w-full\">\n            <Image\n              src={initiative.image_url}\n              alt={initiative.name}\n              fill\n              className=\"object-cover\"\n              onError={() => setImageError(true)}\n            />\n          </div>\n        )}\n\n        <div className=\"p-4\">\n          <div className=\"flex items-start justify-between mb-2\">\n            <TypeBadge type={initiative.type} />\n            <VerifiedBadge verified={initiative.verified} />\n          </div>\n\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n            {initiative.name}\n          </h3>\n\n          {initiative.address && (\n            <div className=\"flex items-center gap-1 mb-2 text-sm text-gray-600\">\n              <MapPin size={14} />\n              <span>{initiative.address}</span>\n            </div>\n          )}\n\n          {distance && (\n            <div className=\"text-sm text-primary-600 font-medium mb-2\">\n              À {formatDistance(distance)}\n            </div>\n          )}\n\n          {description && (\n            <p className=\"text-sm text-gray-600 mb-3\">{truncatedDescription}</p>\n          )}\n\n          <QuickContact initiative={initiative} />\n        </div>\n      </div>\n    );\n  }\n\n  // ================================\n  // VARIANT CARD & DETAILED\n  // ================================\n\n  return (\n    <div\n      className={containerClass}\n      onClick={handleClick}\n      role={onClick ? 'button' : undefined}\n      tabIndex={onClick ? 0 : undefined}\n    >\n      {/* Image d'en-tête */}\n      {initiative.image_url && !imageError && (\n        <div className=\"relative h-48 w-full\">\n          <Image\n            src={initiative.image_url}\n            alt={initiative.name}\n            fill\n            className=\"object-cover\"\n            onError={() => setImageError(true)}\n          />\n\n          {/* Overlay avec badges */}\n          <div className=\"absolute top-3 left-3 flex gap-2\">\n            <TypeBadge type={initiative.type} />\n            <VerifiedBadge verified={initiative.verified} />\n          </div>\n        </div>\n      )}\n\n      {/* Contenu principal */}\n      <div className=\"p-4\">\n        {/* En-tête sans image */}\n        {(!initiative.image_url || imageError) && (\n          <div className=\"flex items-center justify-between mb-3\">\n            <TypeBadge type={initiative.type} />\n            <VerifiedBadge verified={initiative.verified} />\n          </div>\n        )}\n\n        {/* Titre */}\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n          {initiative.name}\n        </h3>\n\n        {/* Adresse et distance */}\n        <div className=\"space-y-2 mb-3\">\n          {initiative.address && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <MapPin size={16} className=\"flex-shrink-0\" />\n              <span>{initiative.address}</span>\n            </div>\n          )}\n\n          {distance && (\n            <div className=\"text-sm text-primary-600 font-medium\">\n              À {formatDistance(distance)}\n            </div>\n          )}\n        </div>\n\n        {/* Description */}\n        {description && (\n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-600 leading-relaxed\">\n              {truncatedDescription}\n            </p>\n            {description.length > 120 && (\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setShowFullDescription(!showFullDescription);\n                }}\n                className=\"text-sm text-primary-600 hover:text-primary-700 mt-1\"\n              >\n                {showFullDescription ? 'Voir moins' : 'Voir plus'}\n              </button>\n            )}\n          </div>\n        )}\n\n        {/* Horaires pour variant detailed */}\n        {variant === 'detailed' && initiative.opening_hours && (\n          <div className=\"mb-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Clock size={16} className=\"text-gray-400\" />\n              <span className=\"text-sm font-medium text-gray-700\">\n                Horaires\n              </span>\n              {isOpen && (\n                <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                  Ouvert\n                </span>\n              )}\n            </div>\n            <pre className=\"text-xs text-gray-600 whitespace-pre-line\">\n              {formatOpeningHours(initiative.opening_hours)}\n            </pre>\n          </div>\n        )}\n\n        {/* Contact */}\n        <div className=\"flex items-center justify-between\">\n          <QuickContact initiative={initiative} />\n\n          {/* Actions d'administration */}\n          {showActions && (onEdit || onDelete) && (\n            <div className=\"flex items-center gap-2\">\n              {onEdit && (\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onEdit(initiative);\n                  }}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 px-2 py-1 rounded\"\n                >\n                  Éditer\n                </button>\n              )}\n              {onDelete && (\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDelete(initiative);\n                  }}\n                  className=\"text-sm text-red-600 hover:text-red-700 px-2 py-1 rounded\"\n                >\n                  Supprimer\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Métadonnées pour variant detailed */}\n        {variant === 'detailed' && (\n          <div className=\"mt-4 pt-4 border-t border-gray-200 text-xs text-gray-500\">\n            <div className=\"flex justify-between\">\n              <span>\n                Ajouté le{' '}\n                {new Date(initiative.created_at).toLocaleDateString('fr-FR')}\n              </span>\n              {initiative.updated_at !== initiative.created_at && (\n                <span>\n                  Modifié le{' '}\n                  {new Date(initiative.updated_at).toLocaleDateString('fr-FR')}\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["InitiativeCard","formatDistance","meters","Math","round","toFixed","isOpenNow","openingHours","now","Date","day","toLocaleDateString","weekday","toLowerCase","currentTime","toTimeString","slice","dayMapping","lundi","mardi","mercredi","jeudi","vendredi","samedi","dimanche","mappedDay","todayHours","open","close","formatOpeningHours","days","dayNames","hoursText","map","index","hours","join","TypeBadge","type","color","INITIATIVE_COLORS","span","className","style","backgroundColor","VerifiedBadge","verified","div","title","Check","size","QuickContact","initiative","hasContact","phone","email","website","a","href","Phone","Mail","target","rel","Globe","ExternalLink","variant","distance","onClick","showActions","onEdit","onDelete","imageError","setImageError","useState","showFullDescription","setShowFullDescription","variantClasses","card","popup","list","detailed","containerClass","handleClick","description","truncatedDescription","length","isOpen","opening_hours","role","undefined","tabIndex","h3","name","address","MapPin","image_url","Image","src","alt","fill","onError","p","button","e","stopPropagation","Clock","pre","created_at","updated_at"],"mappings":"AAAA;;;;;+BAmNA,mCAAmC;AACnC,sBAAsB;AACtB,mCAAmC;AAEnC;;;eAAwBA;;;;6BAtMjB;8DACW;uBACO;4BAES;;;;;;AAkClC,mCAAmC;AACnC,YAAY;AACZ,mCAAmC;AAEnC;;CAEC,GACD,SAASC,eAAeC,MAAc;IACpC,IAAIA,SAAS,MAAM;QACjB,OAAO,GAAGC,KAAKC,KAAK,CAACF,QAAQ,EAAE,CAAC;IAClC;IACA,OAAO,GAAG,AAACA,CAAAA,SAAS,IAAG,EAAGG,OAAO,CAAC,GAAG,GAAG,CAAC;AAC3C;AAEA;;CAEC,GACD,SAASC,UAAUC,YAAsC;IACvD,IAAI,CAACA,cAAc,OAAO;IAE1B,MAAMC,MAAM,IAAIC;IAChB,MAAMC,MAAMF,IACTG,kBAAkB,CAAC,SAAS;QAAEC,SAAS;IAAO,GAC9CC,WAAW;IACd,MAAMC,cAAcN,IAAIO,YAAY,GAAGC,KAAK,CAAC,GAAG,IAAI,QAAQ;IAE5D,MAAMC,aAAiD;QACrDC,OAAO;QACPC,OAAO;QACPC,UAAU;QACVC,OAAO;QACPC,UAAU;QACVC,QAAQ;QACRC,UAAU;IACZ;IAEA,MAAMC,YAAYR,UAAU,CAACP,IAAI;IACjC,IAAI,CAACe,WAAW,OAAO;IAEvB,MAAMC,aAAanB,YAAY,CAACkB,UAAU;IAC1C,IAAI,CAACC,YAAY,OAAO;IAExB,OAAOZ,eAAeY,WAAWC,IAAI,IAAIb,eAAeY,WAAWE,KAAK;AAC1E;AAEA;;CAEC,GACD,SAASC,mBAAmBtB,YAAsC;IAChE,IAAI,CAACA,cAAc,OAAO;IAE1B,MAAMuB,OAAO;QACX;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAMC,WAAW;QAAC;QAAO;QAAO;QAAO;QAAO;QAAO;QAAO;KAAM;IAElE,MAAMC,YAAYF,KACfG,GAAG,CAAC,CAACvB,KAAKwB;QACT,MAAMC,QAAQ5B,YAAY,CAACG,IAA0B;QACrD,IAAI,CAACyB,OAAO,OAAO,GAAGJ,QAAQ,CAACG,MAAM,CAAC,OAAO,CAAC;QAC9C,OAAO,GAAGH,QAAQ,CAACG,MAAM,CAAC,EAAE,EAAEC,MAAMR,IAAI,CAAC,CAAC,EAAEQ,MAAMP,KAAK,EAAE;IAC3D,GACCQ,IAAI,CAAC;IAER,OAAOJ;AACT;AAEA,mCAAmC;AACnC,aAAa;AACb,mCAAmC;AAEnC;;CAEC,GACD,SAASK,UAAU,EAAEC,IAAI,EAAgC;IACvD,MAAMC,QAAQC,6BAAiB,CAACF,KAAK;IAErC,qBACE,qBAACG;QACCC,WAAU;QACVC,OAAO;YAAEC,iBAAiBL;QAAM;kBAE/BD;;AAGP;AAEA;;CAEC,GACD,SAASO,cAAc,EAAEC,QAAQ,EAAyB;IACxD,IAAI,CAACA,UAAU,OAAO;IAEtB,qBACE,sBAACC;QACCL,WAAU;QACVM,OAAM;;0BAEN,qBAACC,kBAAK;gBAACC,MAAM;;0BACb,qBAACT;0BAAK;;;;AAGZ;AAEA;;CAEC,GACD,SAASU,aAAa,EAAEC,UAAU,EAA8B;IAC9D,MAAMC,aAAaD,WAAWE,KAAK,IAAIF,WAAWG,KAAK,IAAIH,WAAWI,OAAO;IAE7E,IAAI,CAACH,YAAY,OAAO;IAExB,qBACE,sBAACN;QAAIL,WAAU;;YACZU,WAAWE,KAAK,kBACf,qBAACG;gBACCC,MAAM,CAAC,IAAI,EAAEN,WAAWE,KAAK,EAAE;gBAC/BZ,WAAU;gBACVM,OAAM;0BAEN,cAAA,qBAACW,kBAAK;oBAACT,MAAM;;;YAIhBE,WAAWG,KAAK,kBACf,qBAACE;gBACCC,MAAM,CAAC,OAAO,EAAEN,WAAWG,KAAK,EAAE;gBAClCb,WAAU;gBACVM,OAAM;0BAEN,cAAA,qBAACY,iBAAI;oBAACV,MAAM;;;YAIfE,WAAWI,OAAO,kBACjB,sBAACC;gBACCC,MAAMN,WAAWI,OAAO;gBACxBK,QAAO;gBACPC,KAAI;gBACJpB,WAAU;gBACVM,OAAM;;kCAEN,qBAACe,kBAAK;wBAACb,MAAM;;kCACb,qBAACc,yBAAY;wBAACd,MAAM;;;;;;AAK9B;AAMe,SAASlD,eAAe,EACrCoD,UAAU,EACVa,UAAU,MAAM,EAChBvB,YAAY,EAAE,EACdwB,QAAQ,EACRC,OAAO,EACPC,cAAc,KAAK,EACnBC,MAAM,EACNC,QAAQ,EACY;IACpB,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAAC;IAC7C,MAAM,CAACC,qBAAqBC,uBAAuB,GAAGF,IAAAA,eAAQ,EAAC;IAE/D,+BAA+B;IAC/B,MAAMG,iBAAiB;QACrBC,MAAM;QACNC,OAAO;QACPC,MAAM;QACNC,UAAU;IACZ;IAEA,MAAMC,iBAAiB,GAAGL,cAAc,CAACX,QAAQ,CAAC,CAAC,EAAEvB,WAAW;IAEhE,kBAAkB;IAClB,MAAMwC,cAAc;QAClB,IAAIf,SAAS;YACXA,QAAQf;QACV;IACF;IAEA,+BAA+B;IAC/B,MAAM+B,cAAc/B,WAAW+B,WAAW,IAAI;IAC9C,MAAMC,uBACJD,YAAYE,MAAM,GAAG,OAAO,CAACX,sBACzB,GAAGS,YAAYnE,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,GACjCmE;IAEN,MAAMG,SAAShF,UAAU8C,WAAWmC,aAAa;IAEjD,mCAAmC;IACnC,eAAe;IACf,mCAAmC;IAEnC,IAAItB,YAAY,QAAQ;QACtB,qBACE,qBAAClB;YACCL,WAAWuC;YACXd,SAASe;YACTM,MAAMrB,UAAU,WAAWsB;YAC3BC,UAAUvB,UAAU,IAAIsB;sBAExB,cAAA,qBAAC1C;gBAAIL,WAAU;0BACb,cAAA,sBAACK;oBAAIL,WAAU;;sCACb,sBAACK;4BAAIL,WAAU;;8CACb,sBAACK;oCAAIL,WAAU;;sDACb,qBAACL;4CAAUC,MAAMc,WAAWd,IAAI;;sDAChC,qBAACO;4CAAcC,UAAUM,WAAWN,QAAQ;;;;8CAG9C,qBAAC6C;oCAAGjD,WAAU;8CACXU,WAAWwC,IAAI;;gCAGjBxC,WAAWyC,OAAO,kBACjB,sBAAC9C;oCAAIL,WAAU;;sDACb,qBAACoD,mBAAM;4CAAC5C,MAAM;;sDACd,qBAACT;4CAAKC,WAAU;sDAAYU,WAAWyC,OAAO;;wCAC7C3B,0BACC,sBAACzB;4CAAKC,WAAU;;gDAAoC;gDAC/CzC,eAAeiE;;;;;;;sCAO5B,qBAACf;4BAAaC,YAAYA;;;;;;IAKpC;IAEA,mCAAmC;IACnC,gBAAgB;IAChB,mCAAmC;IAEnC,IAAIa,YAAY,SAAS;QACvB,qBACE,sBAAClB;YAAIL,WAAWuC;;gBAEb7B,WAAW2C,SAAS,IAAI,CAACxB,4BACxB,qBAACxB;oBAAIL,WAAU;8BACb,cAAA,qBAACsD,cAAK;wBACJC,KAAK7C,WAAW2C,SAAS;wBACzBG,KAAK9C,WAAWwC,IAAI;wBACpBO,IAAI;wBACJzD,WAAU;wBACV0D,SAAS,IAAM5B,cAAc;;;8BAKnC,sBAACzB;oBAAIL,WAAU;;sCACb,sBAACK;4BAAIL,WAAU;;8CACb,qBAACL;oCAAUC,MAAMc,WAAWd,IAAI;;8CAChC,qBAACO;oCAAcC,UAAUM,WAAWN,QAAQ;;;;sCAG9C,qBAAC6C;4BAAGjD,WAAU;sCACXU,WAAWwC,IAAI;;wBAGjBxC,WAAWyC,OAAO,kBACjB,sBAAC9C;4BAAIL,WAAU;;8CACb,qBAACoD,mBAAM;oCAAC5C,MAAM;;8CACd,qBAACT;8CAAMW,WAAWyC,OAAO;;;;wBAI5B3B,0BACC,sBAACnB;4BAAIL,WAAU;;gCAA4C;gCACtDzC,eAAeiE;;;wBAIrBiB,6BACC,qBAACkB;4BAAE3D,WAAU;sCAA8B0C;;sCAG7C,qBAACjC;4BAAaC,YAAYA;;;;;;IAIlC;IAEA,mCAAmC;IACnC,0BAA0B;IAC1B,mCAAmC;IAEnC,qBACE,sBAACL;QACCL,WAAWuC;QACXd,SAASe;QACTM,MAAMrB,UAAU,WAAWsB;QAC3BC,UAAUvB,UAAU,IAAIsB;;YAGvBrC,WAAW2C,SAAS,IAAI,CAACxB,4BACxB,sBAACxB;gBAAIL,WAAU;;kCACb,qBAACsD,cAAK;wBACJC,KAAK7C,WAAW2C,SAAS;wBACzBG,KAAK9C,WAAWwC,IAAI;wBACpBO,IAAI;wBACJzD,WAAU;wBACV0D,SAAS,IAAM5B,cAAc;;kCAI/B,sBAACzB;wBAAIL,WAAU;;0CACb,qBAACL;gCAAUC,MAAMc,WAAWd,IAAI;;0CAChC,qBAACO;gCAAcC,UAAUM,WAAWN,QAAQ;;;;;;0BAMlD,sBAACC;gBAAIL,WAAU;;oBAEX,CAAA,CAACU,WAAW2C,SAAS,IAAIxB,UAAS,mBAClC,sBAACxB;wBAAIL,WAAU;;0CACb,qBAACL;gCAAUC,MAAMc,WAAWd,IAAI;;0CAChC,qBAACO;gCAAcC,UAAUM,WAAWN,QAAQ;;;;kCAKhD,qBAAC6C;wBAAGjD,WAAU;kCACXU,WAAWwC,IAAI;;kCAIlB,sBAAC7C;wBAAIL,WAAU;;4BACZU,WAAWyC,OAAO,kBACjB,sBAAC9C;gCAAIL,WAAU;;kDACb,qBAACoD,mBAAM;wCAAC5C,MAAM;wCAAIR,WAAU;;kDAC5B,qBAACD;kDAAMW,WAAWyC,OAAO;;;;4BAI5B3B,0BACC,sBAACnB;gCAAIL,WAAU;;oCAAuC;oCACjDzC,eAAeiE;;;;;oBAMvBiB,6BACC,sBAACpC;wBAAIL,WAAU;;0CACb,qBAAC2D;gCAAE3D,WAAU;0CACV0C;;4BAEFD,YAAYE,MAAM,GAAG,qBACpB,qBAACiB;gCACCnC,SAAS,CAACoC;oCACRA,EAAEC,eAAe;oCACjB7B,uBAAuB,CAACD;gCAC1B;gCACAhC,WAAU;0CAETgC,sBAAsB,eAAe;;;;oBAO7CT,YAAY,cAAcb,WAAWmC,aAAa,kBACjD,sBAACxC;wBAAIL,WAAU;;0CACb,sBAACK;gCAAIL,WAAU;;kDACb,qBAAC+D,kBAAK;wCAACvD,MAAM;wCAAIR,WAAU;;kDAC3B,qBAACD;wCAAKC,WAAU;kDAAoC;;oCAGnD4C,wBACC,qBAAC7C;wCAAKC,WAAU;kDAA6D;;;;0CAKjF,qBAACgE;gCAAIhE,WAAU;0CACZb,mBAAmBuB,WAAWmC,aAAa;;;;kCAMlD,sBAACxC;wBAAIL,WAAU;;0CACb,qBAACS;gCAAaC,YAAYA;;4BAGzBgB,eAAgBC,CAAAA,UAAUC,QAAO,mBAChC,sBAACvB;gCAAIL,WAAU;;oCACZ2B,wBACC,qBAACiC;wCACCnC,SAAS,CAACoC;4CACRA,EAAEC,eAAe;4CACjBnC,OAAOjB;wCACT;wCACAV,WAAU;kDACX;;oCAIF4B,0BACC,qBAACgC;wCACCnC,SAAS,CAACoC;4CACRA,EAAEC,eAAe;4CACjBlC,SAASlB;wCACX;wCACAV,WAAU;kDACX;;;;;;oBASRuB,YAAY,4BACX,qBAAClB;wBAAIL,WAAU;kCACb,cAAA,sBAACK;4BAAIL,WAAU;;8CACb,sBAACD;;wCAAK;wCACM;wCACT,IAAIhC,KAAK2C,WAAWuD,UAAU,EAAEhG,kBAAkB,CAAC;;;gCAErDyC,WAAWwD,UAAU,KAAKxD,WAAWuD,UAAU,kBAC9C,sBAAClE;;wCAAK;wCACO;wCACV,IAAIhC,KAAK2C,WAAWwD,UAAU,EAAEjG,kBAAkB,CAAC;;;;;;;;;;AAStE"}