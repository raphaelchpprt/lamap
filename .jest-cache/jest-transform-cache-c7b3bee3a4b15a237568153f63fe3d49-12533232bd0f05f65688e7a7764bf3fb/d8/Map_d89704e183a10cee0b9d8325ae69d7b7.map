{"version":3,"sources":["/Users/Raphael/Documents/DEV.nosync/lamap/src/components/Map/Map.tsx"],"sourcesContent":["'use client';\n\n/**\n * Main Map Component for LaMap\n *\n * Uses Mapbox GL JS to display an interactive map with ESS initiatives.\n * Supports clustering, filters, and marker interaction.\n */\n\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useEffect, useRef, useState, useCallback } from 'react';\n\nimport { createClient } from '@/lib/supabase/client';\nimport { databaseInitiativeToInitiative } from '@/lib/supabase/types';\nimport { INITIATIVE_COLORS } from '@/types/initiative';\n\nimport type { Initiative, InitiativeFilters } from '@/types/initiative';\n\n// ================================\n// CONFIGURATION\n// ================================\n\nconst DEFAULT_CONFIG = {\n  style: 'mapbox://styles/mapbox/light-v11',\n  center: [2.3522, 46.6034] as [number, number], // Center of France\n  zoom: 6,\n  minZoom: 3,\n  maxZoom: 18,\n} as const;\n\n// ================================\n// TYPES\n// ================================\n\ninterface MapProps {\n  /** Classes CSS personnalisées */\n  className?: string;\n\n  /** Filtres appliqués aux initiatives */\n  filters?: InitiativeFilters;\n\n  /** Callback lors du clic sur une initiative */\n  onInitiativeClick?: (initiative: Initiative) => void;\n\n  /** Callback lors du clic sur la carte */\n  onMapClick?: (coordinates: [number, number]) => void;\n\n  /** Activer/désactiver le clustering */\n  enableClustering?: boolean;\n\n  /** Centrer automatiquement sur les initiatives */\n  autoFit?: boolean;\n\n  /** Initiatives à afficher (si non fourni, chargées depuis Supabase) */\n  initiatives?: Initiative[];\n}\n\n// ================================\n// MAIN COMPONENT\n// ================================\n\nexport default function Map({\n  className = 'h-full w-full',\n  filters,\n  onInitiativeClick,\n  onMapClick,\n  enableClustering = true,\n  autoFit = false,\n  initiatives: externalInitiatives,\n}: MapProps) {\n  // ================================\n  // STATE // STATE & REFS REFS\n  // ================================\n\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const map = useRef<mapboxgl.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [initiatives, setInitiatives] = useState<Initiative[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // ================================\n  // MAP INITIALIZATION\n  // ================================\n\n  useEffect(() => {\n    if (!mapContainer.current || map.current) return;\n\n    // Check for Mapbox token\n    const token = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n    if (!token) {\n      setError('Missing Mapbox token. Check your .env.local file');\n      return;\n    }\n\n    mapboxgl.accessToken = token;\n\n    try {\n      map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: DEFAULT_CONFIG.style,\n        center: DEFAULT_CONFIG.center,\n        zoom: DEFAULT_CONFIG.zoom,\n        minZoom: DEFAULT_CONFIG.minZoom,\n        maxZoom: DEFAULT_CONFIG.maxZoom,\n        antialias: true,\n      });\n\n      map.current.on('load', () => {\n        setIsLoaded(true);\n        if (map.current) {\n          setupMapSources();\n          setupMapLayers();\n          setupMapInteractions();\n        }\n      });\n\n      // Navigation controls\n      map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n      // Geolocation\n      map.current.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: { enableHighAccuracy: true },\n          trackUserLocation: true,\n          showUserHeading: true,\n        }),\n        'top-right'\n      );\n\n      // Fullscreen control\n      map.current.addControl(new mapboxgl.FullscreenControl(), 'top-right');\n    } catch (err) {\n      console.error('Error initializing map:', err);\n      setError('Unable to initialize Mapbox map');\n    }\n\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n        setIsLoaded(false);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // ================================\n  // LOADING INITIATIVES\n  // ================================\n\n  const loadInitiatives = useCallback(async () => {\n    if (externalInitiatives) {\n      setInitiatives(externalInitiatives);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const supabase = createClient();\n\n      let query = supabase.from('initiatives').select('*');\n\n      // Apply filters\n      if (filters?.types?.length) {\n        query = query.in('type', filters.types);\n      }\n\n      if (filters?.verified_only) {\n        query = query.eq('verified', true);\n      }\n\n      if (filters?.search_query) {\n        query = query.or(\n          `name.ilike.%${filters.search_query}%,description.ilike.%${filters.search_query}%`\n        );\n      }\n\n      const { data, error: dbError } = await query;\n\n      if (dbError) {\n        throw new Error(`Erreur Supabase: ${dbError.message}`);\n      }\n\n      const formattedInitiatives = (data || []).map(\n        databaseInitiativeToInitiative\n      );\n      setInitiatives(formattedInitiatives);\n    } catch (err) {\n      console.error('Erreur lors du chargement des initiatives:', err);\n      setError(err instanceof Error ? err.message : 'Erreur inconnue');\n    } finally {\n      setLoading(false);\n    }\n  }, [filters, externalInitiatives]);\n\n  useEffect(() => {\n    loadInitiatives();\n  }, [loadInitiatives]);\n\n  // ================================\n  // MAPBOX SOURCES CONFIGURATION\n  // ================================\n\n  const setupMapSources = useCallback(() => {\n    if (!map.current) return;\n\n    // Source for initiatives (points)\n    if (!map.current.getSource('initiatives')) {\n      map.current.addSource('initiatives', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: [],\n        },\n        cluster: enableClustering,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n      });\n    }\n  }, [enableClustering]);\n\n  // ================================\n  // LAYERS CONFIGURATION\n  // ================================\n\n  const setupMapLayers = useCallback(() => {\n    if (!map.current) return;\n\n    // Clusters\n    if (enableClustering) {\n      // Circles for clusters\n      if (!map.current.getLayer('clusters')) {\n        map.current.addLayer({\n          id: 'clusters',\n          type: 'circle',\n          source: 'initiatives',\n          filter: ['has', 'point_count'],\n          paint: {\n            'circle-color': [\n              'step',\n              ['get', 'point_count'],\n              '#51bbd6', // Color for 1-10 points\n              10,\n              '#f1c40f', // 10-50 points\n              50,\n              '#e74c3c', // 50+ points\n            ],\n            'circle-radius': [\n              'step',\n              ['get', 'point_count'],\n              20, // Radius for 1-10 points\n              10,\n              30, // 10-50 points\n              50,\n              40, // 50+ points\n            ],\n            'circle-stroke-width': 2,\n            'circle-stroke-color': '#fff',\n          },\n        });\n      }\n\n      // Numbers on clusters\n      if (!map.current.getLayer('cluster-count')) {\n        map.current.addLayer({\n          id: 'cluster-count',\n          type: 'symbol',\n          source: 'initiatives',\n          filter: ['has', 'point_count'],\n          layout: {\n            'text-field': '{point_count_abbreviated}',\n            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n            'text-size': 12,\n          },\n          paint: {\n            'text-color': '#ffffff',\n          },\n        });\n      }\n    }\n\n    // Individual points (not clustered)\n    if (!map.current.getLayer('unclustered-point')) {\n      map.current.addLayer({\n        id: 'unclustered-point',\n        type: 'circle',\n        source: 'initiatives',\n        filter: enableClustering\n          ? (['!', ['has', 'point_count']] as mapboxgl.FilterSpecification)\n          : undefined,\n        paint: {\n          'circle-radius': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            8,\n            4,\n            12,\n            8,\n            16,\n            12,\n          ],\n          'circle-color': [\n            'match',\n            ['get', 'type'],\n            'Ressourcerie',\n            INITIATIVE_COLORS['Ressourcerie'],\n            'Repair Café',\n            INITIATIVE_COLORS['Repair Café'],\n            'AMAP',\n            INITIATIVE_COLORS['AMAP'],\n            \"Entreprise d'insertion\",\n            INITIATIVE_COLORS[\"Entreprise d'insertion\"],\n            'Point de collecte',\n            INITIATIVE_COLORS['Point de collecte'],\n            'Recyclerie',\n            INITIATIVE_COLORS['Recyclerie'],\n            'Épicerie sociale',\n            INITIATIVE_COLORS['Épicerie sociale'],\n            'Jardin partagé',\n            INITIATIVE_COLORS['Jardin partagé'],\n            'Fab Lab',\n            INITIATIVE_COLORS['Fab Lab'],\n            'Coopérative',\n            INITIATIVE_COLORS['Coopérative'],\n            'Monnaie locale',\n            INITIATIVE_COLORS['Monnaie locale'],\n            'Tiers-lieu',\n            INITIATIVE_COLORS['Tiers-lieu'],\n            INITIATIVE_COLORS['Autre'], // Default\n          ],\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#ffffff',\n          'circle-opacity': 0.8,\n        },\n      });\n    }\n  }, [enableClustering]);\n\n  // ================================\n  // MAP INTERACTIONS\n  // ================================\n\n  const setupMapInteractions = useCallback(() => {\n    if (!map.current) return;\n\n    // Pointer cursor on interactive elements\n    map.current.on('mouseenter', 'clusters', () => {\n      if (map.current) map.current.getCanvas().style.cursor = 'pointer';\n    });\n    map.current.on('mouseleave', 'clusters', () => {\n      if (map.current) map.current.getCanvas().style.cursor = '';\n    });\n\n    map.current.on('mouseenter', 'unclustered-point', () => {\n      if (map.current) map.current.getCanvas().style.cursor = 'pointer';\n    });\n    map.current.on('mouseleave', 'unclustered-point', () => {\n      if (map.current) map.current.getCanvas().style.cursor = '';\n    });\n\n    // Click on cluster: zoom\n    map.current.on('click', 'clusters', (e) => {\n      if (!map.current) return;\n\n      const features = map.current.queryRenderedFeatures(e.point, {\n        layers: ['clusters'],\n      });\n\n      const clusterId = features[0]?.properties?.cluster_id;\n      if (clusterId) {\n        const source = map.current.getSource(\n          'initiatives'\n        ) as mapboxgl.GeoJSONSource;\n        source.getClusterExpansionZoom(clusterId, (err, zoom) => {\n          if (err || !map.current || zoom === null || zoom === undefined)\n            return;\n\n          map.current.easeTo({\n            center: (features[0].geometry as GeoJSON.Point).coordinates as [\n              number,\n              number\n            ],\n            zoom,\n          });\n        });\n      }\n    });\n\n    // Click on point: show details\n    map.current.on('click', 'unclustered-point', (e) => {\n      const features = e.features?.[0];\n      if (features?.properties && onInitiativeClick) {\n        const initiative = JSON.parse(\n          features.properties.initiative\n        ) as Initiative;\n        onInitiativeClick(initiative);\n      }\n    });\n\n    // Click on map\n    map.current.on('click', (e) => {\n      const features = map.current?.queryRenderedFeatures(e.point, {\n        layers: ['clusters', 'unclustered-point'],\n      });\n\n      // If we didn't click on a marker/cluster\n      if (!features?.length && onMapClick) {\n        onMapClick([e.lngLat.lng, e.lngLat.lat]);\n      }\n    });\n  }, [onInitiativeClick, onMapClick]);\n\n  // ================================\n  // DATA UPDATE\n  // ================================\n\n  useEffect(() => {\n    if (!map.current || !isLoaded) return;\n\n    const source = map.current.getSource(\n      'initiatives'\n    ) as mapboxgl.GeoJSONSource;\n    if (!source) return;\n\n    // Convert to GeoJSON\n    const geojsonData = {\n      type: 'FeatureCollection' as const,\n      features: initiatives.map((initiative) => ({\n        type: 'Feature' as const,\n        geometry: initiative.location,\n        properties: {\n          id: initiative.id,\n          name: initiative.name,\n          type: initiative.type,\n          verified: initiative.verified,\n          initiative: JSON.stringify(initiative), // Données complètes pour les popups\n        },\n      })),\n    };\n\n    source.setData(geojsonData);\n\n    // Auto-fit si demandé\n    if (autoFit && initiatives.length > 0) {\n      const coordinates = initiatives.map((i) => i.location.coordinates);\n      const bounds = coordinates.reduce(\n        (bounds, coord) => bounds.extend(coord),\n        new mapboxgl.LngLatBounds(coordinates[0], coordinates[0])\n      );\n\n      map.current.fitBounds(bounds, {\n        padding: 50,\n        maxZoom: 12,\n      });\n    }\n  }, [initiatives, isLoaded, autoFit]);\n\n  // ================================\n  // PUBLIC METHODS (exposed via ref if needed)\n  // ================================\n\n  const _flyTo = useCallback((coordinates: [number, number], zoom = 14) => {\n    if (map.current) {\n      map.current.flyTo({ center: coordinates, zoom });\n    }\n  }, []);\n\n  const _fitBounds = useCallback(\n    (bounds: [[number, number], [number, number]]) => {\n      if (map.current) {\n        map.current.fitBounds(bounds, { padding: 50 });\n      }\n    },\n    []\n  );\n\n  // ================================\n  // RENDU\n  // ================================\n\n  return (\n    <div className=\"relative\">\n      {/* Conteneur de la carte */}\n      <div\n        ref={mapContainer}\n        className={className}\n        data-testid=\"map-container\"\n      />\n\n      {/* Indicateur de chargement */}\n      {loading && (\n        <div className=\"absolute inset-0 bg-white/80 flex items-center justify-center z-10\">\n          <div className=\"bg-white rounded-lg shadow-lg p-4 flex items-center space-x-3\">\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-500\" />\n            <span className=\"text-sm font-medium\">\n              Chargement des initiatives...\n            </span>\n          </div>\n        </div>\n      )}\n\n      {/* Affichage d'erreur */}\n      {error && (\n        <div className=\"absolute top-4 left-4 right-4 z-20\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg\n                  className=\"h-5 w-5 text-red-400\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">\n                  Erreur de chargement\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700\">{error}</div>\n                <div className=\"mt-3\">\n                  <button\n                    onClick={() => {\n                      setError(null);\n                      loadInitiatives();\n                    }}\n                    className=\"text-sm bg-red-100 hover:bg-red-200 text-red-800 px-3 py-2 rounded-md transition-colors\"\n                  >\n                    Réessayer\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Informations sur les données */}\n      {!loading && !error && (\n        <div className=\"absolute bottom-4 left-4 z-10\">\n          <div className=\"bg-white/90 backdrop-blur-sm rounded-lg px-3 py-2 shadow-sm\">\n            <span className=\"text-xs text-gray-600\">\n              {initiatives.length} initiative{initiatives.length > 1 ? 's' : ''}{' '}\n              affichée{initiatives.length > 1 ? 's' : ''}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["Map","DEFAULT_CONFIG","style","center","zoom","minZoom","maxZoom","className","filters","onInitiativeClick","onMapClick","enableClustering","autoFit","initiatives","externalInitiatives","mapContainer","useRef","map","isLoaded","setIsLoaded","useState","setInitiatives","loading","setLoading","error","setError","useEffect","current","token","process","env","NEXT_PUBLIC_MAPBOX_TOKEN","mapboxgl","accessToken","container","antialias","on","setupMapSources","setupMapLayers","setupMapInteractions","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserHeading","FullscreenControl","err","console","remove","loadInitiatives","useCallback","supabase","createClient","query","from","select","types","length","in","verified_only","eq","search_query","or","data","dbError","Error","message","formattedInitiatives","databaseInitiativeToInitiative","getSource","addSource","type","features","cluster","clusterMaxZoom","clusterRadius","getLayer","addLayer","id","source","filter","paint","layout","undefined","INITIATIVE_COLORS","getCanvas","cursor","e","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getClusterExpansionZoom","easeTo","geometry","coordinates","initiative","JSON","parse","lngLat","lng","lat","geojsonData","location","name","verified","stringify","setData","i","bounds","reduce","coord","extend","LngLatBounds","fitBounds","padding","_flyTo","flyTo","_fitBounds","div","ref","data-testid","span","svg","viewBox","fill","path","fillRule","d","clipRule","h3","button","onClick"],"mappings":"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"}