3941444ae9d4911f81e4ab3524e4742f
/**
 * Types TypeScript pour LaMap - Cartographie des initiatives ESS
 *
 * Ces types définissent la structure des données pour les initiatives
 * d'économie circulaire, sociale et solidaire (ESS)
 */ // ================================
// TYPES PRINCIPAUX
// ================================
/**
 * Interface principale représentant une initiative ESS
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get ErrorCode () {
        return ErrorCode;
    },
    get INITIATIVE_COLORS () {
        return INITIATIVE_COLORS;
    },
    get INITIATIVE_ICONS () {
        return INITIATIVE_ICONS;
    },
    get LaMapError () {
        return LaMapError;
    }
});
const INITIATIVE_COLORS = {
    Ressourcerie: '#10b981',
    'Repair Café': '#f59e0b',
    AMAP: '#84cc16',
    "Entreprise d'insertion": '#3b82f6',
    'Point de collecte': '#8b5cf6',
    Recyclerie: '#059669',
    'Épicerie sociale': '#dc2626',
    'Jardin partagé': '#65a30d',
    'Fab Lab': '#7c3aed',
    Coopérative: '#0891b2',
    'Monnaie locale': '#ca8a04',
    'Tiers-lieu': '#9333ea',
    Autre: '#6b7280'
};
const INITIATIVE_ICONS = {
    Ressourcerie: 'Recycle',
    'Repair Café': 'Wrench',
    AMAP: 'Wheat',
    "Entreprise d'insertion": 'Building2',
    'Point de collecte': 'Trash2',
    Recyclerie: 'RefreshCw',
    'Épicerie sociale': 'ShoppingCart',
    'Jardin partagé': 'Flower2',
    'Fab Lab': 'Cpu',
    Coopérative: 'Users',
    'Monnaie locale': 'Coins',
    'Tiers-lieu': 'Coffee',
    Autre: 'MapPin'
};
var ErrorCode = /*#__PURE__*/ function(ErrorCode) {
    // Erreurs génériques
    ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    ErrorCode["VALIDATION_ERROR"] = "VALIDATION_ERROR";
    ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
    // Erreurs d'authentification
    ErrorCode["UNAUTHORIZED"] = "UNAUTHORIZED";
    ErrorCode["FORBIDDEN"] = "FORBIDDEN";
    // Erreurs de données
    ErrorCode["NOT_FOUND"] = "NOT_FOUND";
    ErrorCode["DUPLICATE_ENTRY"] = "DUPLICATE_ENTRY";
    // Erreurs géographiques
    ErrorCode["GEOCODING_FAILED"] = "GEOCODING_FAILED";
    ErrorCode["INVALID_COORDINATES"] = "INVALID_COORDINATES";
    // Erreurs Mapbox
    ErrorCode["MAPBOX_TOKEN_INVALID"] = "MAPBOX_TOKEN_INVALID";
    ErrorCode["MAPBOX_RATE_LIMIT"] = "MAPBOX_RATE_LIMIT";
    // Erreurs Supabase
    ErrorCode["SUPABASE_CONNECTION_ERROR"] = "SUPABASE_CONNECTION_ERROR";
    ErrorCode["RLS_POLICY_VIOLATION"] = "RLS_POLICY_VIOLATION";
    return ErrorCode;
}({});
class LaMapError extends Error {
    constructor(code, message, details){
        super(message), this.code = code, this.details = details;
        this.name = 'LaMapError';
    }
}

//# sourceMappingURL=data:application/json;base64,