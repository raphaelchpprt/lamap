{"version":3,"sources":["/Users/Raphael/Documents/DEV.nosync/lamap/src/__tests__/components/InitiativeCard.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react';\n\nimport InitiativeCard from '@/components/Initiative/InitiativeCard';\n\nimport type { Initiative } from '@/types/initiative';\n\n// Mock Supabase client\njest.mock('@/lib/supabase/client', () => ({\n  createClient: jest.fn(() => ({\n    auth: {\n      getUser: jest.fn(() =>\n        Promise.resolve({ data: { user: null }, error: null })\n      ),\n    },\n  })),\n}));\n\nconst mockInitiative: Initiative = {\n  id: '123e4567-e89b-12d3-a456-426614174000',\n  name: 'Ressourcerie de Belleville',\n  type: 'Ressourcerie',\n  description: 'Une ressourcerie engagée pour le réemploi',\n  address: '12 rue de Belleville, 75020 Paris',\n  location: {\n    type: 'Point',\n    coordinates: [2.3894, 48.8724],\n  },\n  verified: true,\n  image_url: 'https://example.com/image.jpg',\n  website: 'https://ressourcerie-belleville.fr',\n  phone: '01 23 45 67 89',\n  email: 'contact@ressourcerie-belleville.fr',\n  opening_hours: {\n    monday: { open: '09:00', close: '18:00' },\n    tuesday: { open: '09:00', close: '18:00' },\n    wednesday: null,\n    thursday: { open: '09:00', close: '18:00' },\n    friday: { open: '09:00', close: '18:00' },\n    saturday: { open: '10:00', close: '17:00' },\n    sunday: null,\n  },\n  user_id: 'user-123',\n  created_at: '2024-01-15T10:00:00Z',\n  updated_at: '2024-01-15T10:00:00Z',\n};\n\ndescribe('InitiativeCard', () => {\n  it('displays basic initiative information', () => {\n    render(<InitiativeCard initiative={mockInitiative} />);\n\n    expect(screen.getByText('Ressourcerie de Belleville')).toBeInTheDocument();\n    expect(screen.getByText('Ressourcerie')).toBeInTheDocument();\n    expect(screen.getByText(/Une ressourcerie engagée/)).toBeInTheDocument();\n  });\n\n  it('displays address when present', () => {\n    render(<InitiativeCard initiative={mockInitiative} />);\n\n    expect(screen.getByText(/12 rue de Belleville/)).toBeInTheDocument();\n  });\n\n  it('displays \"Verified\" badge for verified initiatives', () => {\n    render(<InitiativeCard initiative={mockInitiative} />);\n\n    expect(screen.getByText('Vérifié')).toBeInTheDocument();\n  });\n\n  it('does not display \"Verified\" badge for unverified initiatives', () => {\n    const unverifiedInitiative = { ...mockInitiative, verified: false };\n    render(<InitiativeCard initiative={unverifiedInitiative} />);\n\n    expect(screen.queryByText('Vérifié')).not.toBeInTheDocument();\n  });\n\n  it('displays contact links when present', () => {\n    render(<InitiativeCard initiative={mockInitiative} />);\n\n    const websiteLink = screen.getByRole('link', { name: /site web/i });\n    expect(websiteLink).toHaveAttribute(\n      'href',\n      'https://ressourcerie-belleville.fr'\n    );\n    expect(websiteLink).toHaveAttribute('target', '_blank');\n    expect(websiteLink).toHaveAttribute('rel', 'noopener noreferrer');\n  });\n\n  it('displays phone and email', () => {\n    render(<InitiativeCard initiative={mockInitiative} />);\n\n    expect(screen.getByText('01 23 45 67 89')).toBeInTheDocument();\n    expect(\n      screen.getByText('contact@ressourcerie-belleville.fr')\n    ).toBeInTheDocument();\n  });\n\n  it('handles card click to display more details', () => {\n    const onClickMock = jest.fn();\n    render(\n      <InitiativeCard initiative={mockInitiative} onClick={onClickMock} />\n    );\n\n    const card = screen.getByRole('article');\n    fireEvent.click(card);\n\n    expect(onClickMock).toHaveBeenCalledTimes(1);\n  });\n\n  it('displays image when present', () => {\n    render(<InitiativeCard initiative={mockInitiative} />);\n\n    const image = screen.getByAltText('Ressourcerie de Belleville');\n    expect(image).toBeInTheDocument();\n    expect(image).toHaveAttribute('src');\n  });\n\n  it('handles missing optional information', () => {\n    const minimalInitiative: Initiative = {\n      id: '123',\n      name: 'Initiative minimale',\n      type: 'Autre',\n      location: {\n        type: 'Point',\n        coordinates: [2.3522, 48.8566],\n      },\n      verified: false,\n      created_at: '2024-01-15T10:00:00Z',\n      updated_at: '2024-01-15T10:00:00Z',\n    };\n\n    render(<InitiativeCard initiative={minimalInitiative} />);\n\n    expect(screen.getByText('Initiative minimale')).toBeInTheDocument();\n    expect(screen.getByText('Autre')).toBeInTheDocument();\n    expect(screen.queryByText(/http/)).not.toBeInTheDocument();\n  });\n\n  it('applies custom CSS classes', () => {\n    const { container } = render(\n      <InitiativeCard initiative={mockInitiative} className=\"custom-class\" />\n    );\n\n    const card = container.querySelector('.custom-class');\n    expect(card).toBeInTheDocument();\n  });\n\n  it('displays opening hours in readable format', () => {\n    render(<InitiativeCard initiative={mockInitiative} showOpeningHours />);\n\n    expect(screen.getByText(/Horaires/i)).toBeInTheDocument();\n    expect(screen.getByText(/Lundi/i)).toBeInTheDocument();\n    expect(screen.getByText(/09:00 - 18:00/)).toBeInTheDocument();\n  });\n\n  it('is accessible with appropriate ARIA attributes', () => {\n    render(<InitiativeCard initiative={mockInitiative} />);\n\n    const card = screen.getByRole('article');\n    expect(card).toHaveAttribute('aria-label');\n  });\n});\n"],"names":["jest","mock","createClient","fn","auth","getUser","Promise","resolve","data","user","error","mockInitiative","id","name","type","description","address","location","coordinates","verified","image_url","website","phone","email","opening_hours","monday","open","close","tuesday","wednesday","thursday","friday","saturday","sunday","user_id","created_at","updated_at","describe","it","render","InitiativeCard","initiative","expect","screen","getByText","toBeInTheDocument","unverifiedInitiative","queryByText","not","websiteLink","getByRole","toHaveAttribute","onClickMock","onClick","card","fireEvent","click","toHaveBeenCalledTimes","image","getByAltText","minimalInitiative","container","className","querySelector","showOpeningHours"],"mappings":";AAMA,uBAAuB;AACvBA,KAAKC,IAAI,CAAC,yBAAyB,IAAO,CAAA;QACxCC,cAAcF,KAAKG,EAAE,CAAC,IAAO,CAAA;gBAC3BC,MAAM;oBACJC,SAASL,KAAKG,EAAE,CAAC,IACfG,QAAQC,OAAO,CAAC;4BAAEC,MAAM;gCAAEC,MAAM;4BAAK;4BAAGC,OAAO;wBAAK;gBAExD;YACF,CAAA;IACF,CAAA;;;;;uBAf0C;uEAEf;;;;;;AAe3B,MAAMC,iBAA6B;IACjCC,IAAI;IACJC,MAAM;IACNC,MAAM;IACNC,aAAa;IACbC,SAAS;IACTC,UAAU;QACRH,MAAM;QACNI,aAAa;YAAC;YAAQ;SAAQ;IAChC;IACAC,UAAU;IACVC,WAAW;IACXC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,eAAe;QACbC,QAAQ;YAAEC,MAAM;YAASC,OAAO;QAAQ;QACxCC,SAAS;YAAEF,MAAM;YAASC,OAAO;QAAQ;QACzCE,WAAW;QACXC,UAAU;YAAEJ,MAAM;YAASC,OAAO;QAAQ;QAC1CI,QAAQ;YAAEL,MAAM;YAASC,OAAO;QAAQ;QACxCK,UAAU;YAAEN,MAAM;YAASC,OAAO;QAAQ;QAC1CM,QAAQ;IACV;IACAC,SAAS;IACTC,YAAY;IACZC,YAAY;AACd;AAEAC,SAAS,kBAAkB;IACzBC,GAAG,yCAAyC;QAC1CC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;;QAEnC+B,OAAOC,aAAM,CAACC,SAAS,CAAC,+BAA+BC,iBAAiB;QACxEH,OAAOC,aAAM,CAACC,SAAS,CAAC,iBAAiBC,iBAAiB;QAC1DH,OAAOC,aAAM,CAACC,SAAS,CAAC,6BAA6BC,iBAAiB;IACxE;IAEAP,GAAG,iCAAiC;QAClCC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;;QAEnC+B,OAAOC,aAAM,CAACC,SAAS,CAAC,yBAAyBC,iBAAiB;IACpE;IAEAP,GAAG,sDAAsD;QACvDC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;;QAEnC+B,OAAOC,aAAM,CAACC,SAAS,CAAC,YAAYC,iBAAiB;IACvD;IAEAP,GAAG,gEAAgE;QACjE,MAAMQ,uBAAuB;YAAE,GAAGnC,cAAc;YAAEQ,UAAU;QAAM;QAClEoB,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAYK;;QAEnCJ,OAAOC,aAAM,CAACI,WAAW,CAAC,YAAYC,GAAG,CAACH,iBAAiB;IAC7D;IAEAP,GAAG,uCAAuC;QACxCC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;;QAEnC,MAAMsC,cAAcN,aAAM,CAACO,SAAS,CAAC,QAAQ;YAAErC,MAAM;QAAY;QACjE6B,OAAOO,aAAaE,eAAe,CACjC,QACA;QAEFT,OAAOO,aAAaE,eAAe,CAAC,UAAU;QAC9CT,OAAOO,aAAaE,eAAe,CAAC,OAAO;IAC7C;IAEAb,GAAG,4BAA4B;QAC7BC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;;QAEnC+B,OAAOC,aAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OACEC,aAAM,CAACC,SAAS,CAAC,uCACjBC,iBAAiB;IACrB;IAEAP,GAAG,8CAA8C;QAC/C,MAAMc,cAAcpD,KAAKG,EAAE;QAC3BoC,IAAAA,aAAM,gBACJ,qBAACC,uBAAc;YAACC,YAAY9B;YAAgB0C,SAASD;;QAGvD,MAAME,OAAOX,aAAM,CAACO,SAAS,CAAC;QAC9BK,gBAAS,CAACC,KAAK,CAACF;QAEhBZ,OAAOU,aAAaK,qBAAqB,CAAC;IAC5C;IAEAnB,GAAG,+BAA+B;QAChCC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;;QAEnC,MAAM+C,QAAQf,aAAM,CAACgB,YAAY,CAAC;QAClCjB,OAAOgB,OAAOb,iBAAiB;QAC/BH,OAAOgB,OAAOP,eAAe,CAAC;IAChC;IAEAb,GAAG,wCAAwC;QACzC,MAAMsB,oBAAgC;YACpChD,IAAI;YACJC,MAAM;YACNC,MAAM;YACNG,UAAU;gBACRH,MAAM;gBACNI,aAAa;oBAAC;oBAAQ;iBAAQ;YAChC;YACAC,UAAU;YACVgB,YAAY;YACZC,YAAY;QACd;QAEAG,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAYmB;;QAEnClB,OAAOC,aAAM,CAACC,SAAS,CAAC,wBAAwBC,iBAAiB;QACjEH,OAAOC,aAAM,CAACC,SAAS,CAAC,UAAUC,iBAAiB;QACnDH,OAAOC,aAAM,CAACI,WAAW,CAAC,SAASC,GAAG,CAACH,iBAAiB;IAC1D;IAEAP,GAAG,8BAA8B;QAC/B,MAAM,EAAEuB,SAAS,EAAE,GAAGtB,IAAAA,aAAM,gBAC1B,qBAACC,uBAAc;YAACC,YAAY9B;YAAgBmD,WAAU;;QAGxD,MAAMR,OAAOO,UAAUE,aAAa,CAAC;QACrCrB,OAAOY,MAAMT,iBAAiB;IAChC;IAEAP,GAAG,6CAA6C;QAC9CC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;YAAgBqD,gBAAgB;;QAEnEtB,OAAOC,aAAM,CAACC,SAAS,CAAC,cAAcC,iBAAiB;QACvDH,OAAOC,aAAM,CAACC,SAAS,CAAC,WAAWC,iBAAiB;QACpDH,OAAOC,aAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;IAC7D;IAEAP,GAAG,kDAAkD;QACnDC,IAAAA,aAAM,gBAAC,qBAACC,uBAAc;YAACC,YAAY9B;;QAEnC,MAAM2C,OAAOX,aAAM,CAACO,SAAS,CAAC;QAC9BR,OAAOY,MAAMH,eAAe,CAAC;IAC/B;AACF"}