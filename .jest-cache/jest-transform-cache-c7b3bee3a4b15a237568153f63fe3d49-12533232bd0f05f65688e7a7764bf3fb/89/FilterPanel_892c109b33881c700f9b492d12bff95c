4130808996123072a9f247c6cbed1073
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return FilterPanel;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _badge = require("./ui/badge");
const _button = require("./ui/button");
const _card = require("./ui/card");
const INITIATIVE_TYPES = [
    'Ressourcerie',
    'Repair Café',
    'AMAP',
    "Entreprise d'insertion",
    'Point de collecte',
    'Recyclerie',
    'Épicerie sociale',
    'Jardin partagé',
    'Fab Lab',
    'Coopérative',
    'Monnaie locale',
    'Tiers-lieu',
    'Autre'
];
const TYPE_COLORS = {
    Ressourcerie: 'bg-primary-500',
    'Repair Café': 'bg-orange-500',
    AMAP: 'bg-green-600',
    "Entreprise d'insertion": 'bg-blue-500',
    'Point de collecte': 'bg-purple-500',
    Recyclerie: 'bg-teal-500',
    'Épicerie sociale': 'bg-red-600',
    'Jardin partagé': 'bg-lime-600',
    'Fab Lab': 'bg-violet-600',
    Coopérative: 'bg-cyan-600',
    'Monnaie locale': 'bg-yellow-600',
    'Tiers-lieu': 'bg-fuchsia-600',
    Autre: 'bg-gray-500'
};
function FilterPanel({ selectedTypes, onFilterChange, initiativeCounts = {} }) {
    const [isExpanded, setIsExpanded] = (0, _react.useState)(true);
    const handleTypeToggle = (type)=>{
        if (selectedTypes.includes(type)) {
            onFilterChange(selectedTypes.filter((t)=>t !== type));
        } else {
            onFilterChange([
                ...selectedTypes,
                type
            ]);
        }
    };
    const handleSelectAll = ()=>{
        onFilterChange(INITIATIVE_TYPES);
    };
    const handleDeselectAll = ()=>{
        onFilterChange([]);
    };
    const totalCount = Object.values(initiativeCounts).reduce((sum, count)=>sum + count, 0);
    const selectedCount = selectedTypes.reduce((sum, type)=>sum + (initiativeCounts[type] || 0), 0);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: "w-full",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                        children: "Filtres"
                                    }),
                                    totalCount > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardDescription, {
                                        children: [
                                            selectedCount,
                                            " / ",
                                            totalCount,
                                            " initiatives"
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "ghost",
                                size: "icon",
                                onClick: ()=>setIsExpanded(!isExpanded),
                                "aria-label": isExpanded ? 'Réduire' : 'Développer',
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                    className: `w-5 h-5 transform transition-transform ${isExpanded ? 'rotate-180' : ''}`,
                                    fill: "none",
                                    stroke: "currentColor",
                                    viewBox: "0 0 24 24",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                        strokeLinecap: "round",
                                        strokeLinejoin: "round",
                                        strokeWidth: 2,
                                        d: "M19 9l-7 7-7-7"
                                    })
                                })
                            })
                        ]
                    }),
                    isExpanded && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex gap-2 mt-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "link",
                                size: "sm",
                                onClick: handleSelectAll,
                                className: "h-auto p-0",
                                children: "Tout s\xe9lectionner"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-muted-foreground",
                                children: "|"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "link",
                                size: "sm",
                                onClick: handleDeselectAll,
                                className: "h-auto p-0 text-muted-foreground",
                                children: "Tout d\xe9s\xe9lectionner"
                            })
                        ]
                    })
                ]
            }),
            isExpanded && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "space-y-2",
                children: [
                    INITIATIVE_TYPES.map((type)=>{
                        const count = initiativeCounts[type] || 0;
                        const isSelected = selectedTypes.includes(type);
                        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                            className: `
                  flex items-center justify-between p-3 rounded-lg cursor-pointer
                  transition-colors border-2
                  ${isSelected ? 'bg-primary/5 border-primary' : 'bg-muted/50 border-transparent hover:bg-muted'}
                `,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            type: "checkbox",
                                            checked: isSelected,
                                            onChange: ()=>handleTypeToggle(type),
                                            className: "w-4 h-4 text-primary rounded focus:ring-primary"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: `w-3 h-3 rounded-full ${TYPE_COLORS[type]}`
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-sm font-medium",
                                                    children: type
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                count > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                    variant: isSelected ? 'default' : 'secondary',
                                    children: count
                                })
                            ]
                        }, type);
                    }),
                    totalCount > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "pt-4 border-t mt-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "text-xs text-muted-foreground",
                            children: "\uD83D\uDCA1 Cliquez sur un type pour afficher/masquer les initiatives correspondantes sur la carte"
                        })
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,