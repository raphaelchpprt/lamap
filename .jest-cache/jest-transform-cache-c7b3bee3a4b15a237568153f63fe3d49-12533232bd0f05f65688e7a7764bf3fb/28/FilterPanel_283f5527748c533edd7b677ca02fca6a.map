{"version":3,"sources":["/Users/Raphael/Documents/DEV.nosync/lamap/src/components/FilterPanel.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\n\nimport type { InitiativeType } from '@/types/initiative';\n\ninterface FilterPanelProps {\n  selectedTypes: InitiativeType[];\n  onFilterChange: (types: InitiativeType[]) => void;\n  initiativeCounts?: Partial<Record<InitiativeType, number>>;\n}\n\nconst INITIATIVE_TYPES: InitiativeType[] = [\n  'Ressourcerie',\n  'Repair Caf√©',\n  'AMAP',\n  \"Entreprise d'insertion\",\n  'Point de collecte',\n  'Recyclerie',\n  '√âpicerie sociale',\n  'Jardin partag√©',\n  'Fab Lab',\n  'Coop√©rative',\n  'Monnaie locale',\n  'Tiers-lieu',\n  'Autre',\n];\n\nconst TYPE_COLORS: Record<InitiativeType, string> = {\n  Ressourcerie: 'bg-primary-500',\n  'Repair Caf√©': 'bg-orange-500',\n  AMAP: 'bg-green-600',\n  \"Entreprise d'insertion\": 'bg-blue-500',\n  'Point de collecte': 'bg-purple-500',\n  Recyclerie: 'bg-teal-500',\n  '√âpicerie sociale': 'bg-red-600',\n  'Jardin partag√©': 'bg-lime-600',\n  'Fab Lab': 'bg-violet-600',\n  Coop√©rative: 'bg-cyan-600',\n  'Monnaie locale': 'bg-yellow-600',\n  'Tiers-lieu': 'bg-fuchsia-600',\n  Autre: 'bg-gray-500',\n};\n\nexport default function FilterPanel({\n  selectedTypes,\n  onFilterChange,\n  initiativeCounts = {},\n}: FilterPanelProps) {\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  const handleTypeToggle = (type: InitiativeType) => {\n    if (selectedTypes.includes(type)) {\n      onFilterChange(selectedTypes.filter((t) => t !== type));\n    } else {\n      onFilterChange([...selectedTypes, type]);\n    }\n  };\n\n  const handleSelectAll = () => {\n    onFilterChange(INITIATIVE_TYPES);\n  };\n\n  const handleDeselectAll = () => {\n    onFilterChange([]);\n  };\n\n  const totalCount = Object.values(initiativeCounts).reduce(\n    (sum, count) => sum + count,\n    0\n  );\n  const selectedCount = selectedTypes.reduce(\n    (sum, type) => sum + (initiativeCounts[type] || 0),\n    0\n  );\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle>Filtres</CardTitle>\n            {totalCount > 0 && (\n              <CardDescription>\n                {selectedCount} / {totalCount} initiatives\n              </CardDescription>\n            )}\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => setIsExpanded(!isExpanded)}\n            aria-label={isExpanded ? 'R√©duire' : 'D√©velopper'}\n          >\n            <svg\n              className={`w-5 h-5 transform transition-transform ${\n                isExpanded ? 'rotate-180' : ''\n              }`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M19 9l-7 7-7-7\"\n              />\n            </svg>\n          </Button>\n        </div>\n\n        {/* Actions rapides */}\n        {isExpanded && (\n          <div className=\"flex gap-2 mt-2\">\n            <Button\n              variant=\"link\"\n              size=\"sm\"\n              onClick={handleSelectAll}\n              className=\"h-auto p-0\"\n            >\n              Tout s√©lectionner\n            </Button>\n            <span className=\"text-muted-foreground\">|</span>\n            <Button\n              variant=\"link\"\n              size=\"sm\"\n              onClick={handleDeselectAll}\n              className=\"h-auto p-0 text-muted-foreground\"\n            >\n              Tout d√©s√©lectionner\n            </Button>\n          </div>\n        )}\n      </CardHeader>\n\n      {/* Liste des types */}\n      {isExpanded && (\n        <CardContent className=\"space-y-2\">\n          {INITIATIVE_TYPES.map((type) => {\n            const count = initiativeCounts[type] || 0;\n            const isSelected = selectedTypes.includes(type);\n\n            return (\n              <label\n                key={type}\n                className={`\n                  flex items-center justify-between p-3 rounded-lg cursor-pointer\n                  transition-colors border-2\n                  ${\n                    isSelected\n                      ? 'bg-primary/5 border-primary'\n                      : 'bg-muted/50 border-transparent hover:bg-muted'\n                  }\n                `}\n              >\n                <div className=\"flex items-center gap-3\">\n                  <input\n                    type=\"checkbox\"\n                    checked={isSelected}\n                    onChange={() => handleTypeToggle(type)}\n                    className=\"w-4 h-4 text-primary rounded focus:ring-primary\"\n                  />\n                  <div className=\"flex items-center gap-2\">\n                    <span\n                      className={`w-3 h-3 rounded-full ${TYPE_COLORS[type]}`}\n                    />\n                    <span className=\"text-sm font-medium\">{type}</span>\n                  </div>\n                </div>\n                {count > 0 && (\n                  <Badge variant={isSelected ? 'default' : 'secondary'}>\n                    {count}\n                  </Badge>\n                )}\n              </label>\n            );\n          })}\n\n          {/* L√©gende */}\n          {totalCount > 0 && (\n            <div className=\"pt-4 border-t mt-4\">\n              <p className=\"text-xs text-muted-foreground\">\n                üí° Cliquez sur un type pour afficher/masquer les initiatives\n                correspondantes sur la carte\n              </p>\n            </div>\n          )}\n        </CardContent>\n      )}\n    </Card>\n  );\n}\n"],"names":["FilterPanel","INITIATIVE_TYPES","TYPE_COLORS","Ressourcerie","AMAP","Recyclerie","Coop√©rative","Autre","selectedTypes","onFilterChange","initiativeCounts","isExpanded","setIsExpanded","useState","handleTypeToggle","type","includes","filter","t","handleSelectAll","handleDeselectAll","totalCount","Object","values","reduce","sum","count","selectedCount","Card","className","CardHeader","div","CardTitle","CardDescription","Button","variant","size","onClick","aria-label","svg","fill","stroke","viewBox","path","strokeLinecap","strokeLinejoin","strokeWidth","d","span","CardContent","map","isSelected","label","input","checked","onChange","Badge","p"],"mappings":"AAAA;;;;;+BAsDA;;;eAAwBA;;;;uBApDC;uBAEH;wBACC;sBAOhB;AAUP,MAAMC,mBAAqC;IACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,cAA8C;IAClDC,cAAc;IACd,eAAe;IACfC,MAAM;IACN,0BAA0B;IAC1B,qBAAqB;IACrBC,YAAY;IACZ,oBAAoB;IACpB,kBAAkB;IAClB,WAAW;IACXC,aAAa;IACb,kBAAkB;IAClB,cAAc;IACdC,OAAO;AACT;AAEe,SAASP,YAAY,EAClCQ,aAAa,EACbC,cAAc,EACdC,mBAAmB,CAAC,CAAC,EACJ;IACjB,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAAC;IAE7C,MAAMC,mBAAmB,CAACC;QACxB,IAAIP,cAAcQ,QAAQ,CAACD,OAAO;YAChCN,eAAeD,cAAcS,MAAM,CAAC,CAACC,IAAMA,MAAMH;QACnD,OAAO;YACLN,eAAe;mBAAID;gBAAeO;aAAK;QACzC;IACF;IAEA,MAAMI,kBAAkB;QACtBV,eAAeR;IACjB;IAEA,MAAMmB,oBAAoB;QACxBX,eAAe,EAAE;IACnB;IAEA,MAAMY,aAAaC,OAAOC,MAAM,CAACb,kBAAkBc,MAAM,CACvD,CAACC,KAAKC,QAAUD,MAAMC,OACtB;IAEF,MAAMC,gBAAgBnB,cAAcgB,MAAM,CACxC,CAACC,KAAKV,OAASU,MAAOf,CAAAA,gBAAgB,CAACK,KAAK,IAAI,CAAA,GAChD;IAGF,qBACE,sBAACa,UAAI;QAACC,WAAU;;0BACd,sBAACC,gBAAU;;kCACT,sBAACC;wBAAIF,WAAU;;0CACb,sBAACE;;kDACC,qBAACC,eAAS;kDAAC;;oCACVX,aAAa,mBACZ,sBAACY,qBAAe;;4CACbN;4CAAc;4CAAIN;4CAAW;;;;;0CAIpC,qBAACa,cAAM;gCACLC,SAAQ;gCACRC,MAAK;gCACLC,SAAS,IAAMzB,cAAc,CAACD;gCAC9B2B,cAAY3B,aAAa,YAAY;0CAErC,cAAA,qBAAC4B;oCACCV,WAAW,CAAC,uCAAuC,EACjDlB,aAAa,eAAe,IAC5B;oCACF6B,MAAK;oCACLC,QAAO;oCACPC,SAAQ;8CAER,cAAA,qBAACC;wCACCC,eAAc;wCACdC,gBAAe;wCACfC,aAAa;wCACbC,GAAE;;;;;;oBAOTpC,4BACC,sBAACoB;wBAAIF,WAAU;;0CACb,qBAACK,cAAM;gCACLC,SAAQ;gCACRC,MAAK;gCACLC,SAASlB;gCACTU,WAAU;0CACX;;0CAGD,qBAACmB;gCAAKnB,WAAU;0CAAwB;;0CACxC,qBAACK,cAAM;gCACLC,SAAQ;gCACRC,MAAK;gCACLC,SAASjB;gCACTS,WAAU;0CACX;;;;;;YAQNlB,4BACC,sBAACsC,iBAAW;gBAACpB,WAAU;;oBACpB5B,iBAAiBiD,GAAG,CAAC,CAACnC;wBACrB,MAAMW,QAAQhB,gBAAgB,CAACK,KAAK,IAAI;wBACxC,MAAMoC,aAAa3C,cAAcQ,QAAQ,CAACD;wBAE1C,qBACE,sBAACqC;4BAECvB,WAAW,CAAC;;;kBAGV,EACEsB,aACI,gCACA,gDACL;gBACH,CAAC;;8CAED,sBAACpB;oCAAIF,WAAU;;sDACb,qBAACwB;4CACCtC,MAAK;4CACLuC,SAASH;4CACTI,UAAU,IAAMzC,iBAAiBC;4CACjCc,WAAU;;sDAEZ,sBAACE;4CAAIF,WAAU;;8DACb,qBAACmB;oDACCnB,WAAW,CAAC,qBAAqB,EAAE3B,WAAW,CAACa,KAAK,EAAE;;8DAExD,qBAACiC;oDAAKnB,WAAU;8DAAuBd;;;;;;gCAG1CW,QAAQ,mBACP,qBAAC8B,YAAK;oCAACrB,SAASgB,aAAa,YAAY;8CACtCzB;;;2BA3BAX;oBAgCX;oBAGCM,aAAa,mBACZ,qBAACU;wBAAIF,WAAU;kCACb,cAAA,qBAAC4B;4BAAE5B,WAAU;sCAAgC;;;;;;;AAU3D"}