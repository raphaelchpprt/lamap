{"version":3,"sources":["/Users/Raphael/Documents/DEV.nosync/lamap/src/types/initiative.ts"],"sourcesContent":["/**\n * Types TypeScript pour LaMap - Cartographie des initiatives ESS\n *\n * Ces types définissent la structure des données pour les initiatives\n * d'économie circulaire, sociale et solidaire (ESS)\n */\n\n// ================================\n// TYPES PRINCIPAUX\n// ================================\n\n/**\n * Interface principale représentant une initiative ESS\n */\nexport interface Initiative {\n  /** Identifiant unique UUID généré par Supabase */\n  id: string;\n\n  /** Nom de l'initiative */\n  name: string;\n\n  /** Type/catégorie de l'initiative */\n  type: InitiativeType;\n\n  /** Description détaillée (optionnelle) */\n  description?: string;\n\n  /** Adresse textuelle de l'initiative */\n  address?: string;\n\n  /** Coordonnées géospatiales (format GeoJSON Point) */\n  location: GeoJSONPoint;\n\n  /** Statut de vérification par les modérateurs */\n  verified: boolean;\n\n  /** URL de l'image de présentation */\n  image_url?: string;\n\n  /** Site web officiel */\n  website?: string;\n\n  /** Numéro de téléphone */\n  phone?: string;\n\n  /** Adresse email de contact */\n  email?: string;\n\n  /** Horaires d'ouverture par jour de la semaine */\n  opening_hours?: OpeningHours;\n\n  /** ID de l'utilisateur ayant créé l'initiative */\n  user_id?: string;\n\n  /** Date de création (ISO string) */\n  created_at: string;\n\n  /** Date de dernière modification (ISO string) */\n  updated_at: string;\n}\n\n/**\n * Types d'initiatives supportées par LaMap\n * Basé sur l'écosystème ESS français\n */\nexport type InitiativeType =\n  | 'Ressourcerie' // Collecte, tri, remise en état et vente d'objets\n  | 'Repair Café' // Ateliers de réparation collaboratifs\n  | 'AMAP' // Association pour le Maintien d'une Agriculture Paysanne\n  | \"Entreprise d'insertion\" // Structures d'insertion par l'activité économique\n  | 'Point de collecte' // Points de collecte de déchets spécialisés\n  | 'Recyclerie' // Centres de recyclage et valorisation\n  | 'Épicerie sociale' // Magasins solidaires à prix réduits\n  | 'Jardin partagé' // Espaces de jardinage collectif\n  | 'Fab Lab' // Laboratoires de fabrication numérique\n  | 'Coopérative' // Structures coopératives diverses\n  | 'Monnaie locale' // Systèmes d'échange locaux\n  | 'Tiers-lieu' // Espaces de coworking et innovation sociale\n  | 'Autre'; // Autres initiatives ESS\n\n/**\n * Structure des horaires d'ouverture\n * Chaque jour peut avoir des horaires ou être fermé (null)\n */\nexport interface OpeningHours {\n  /** Lundi */\n  monday?: TimeSlot | null;\n  /** Mardi */\n  tuesday?: TimeSlot | null;\n  /** Mercredi */\n  wednesday?: TimeSlot | null;\n  /** Jeudi */\n  thursday?: TimeSlot | null;\n  /** Vendredi */\n  friday?: TimeSlot | null;\n  /** Samedi */\n  saturday?: TimeSlot | null;\n  /** Dimanche */\n  sunday?: TimeSlot | null;\n}\n\n/**\n * Créneau horaire pour un jour donné\n */\nexport interface TimeSlot {\n  /** Heure d'ouverture (format HH:MM) */\n  open: string;\n  /** Heure de fermeture (format HH:MM) */\n  close: string;\n  /** Pause déjeuner éventuelle */\n  break?: {\n    start: string;\n    end: string;\n  };\n}\n\n// ================================\n// TYPES GÉOGRAPHIQUES\n// ================================\n\n/**\n * Point géographique au format GeoJSON\n * Conforme à la spécification RFC 7946\n */\nexport interface GeoJSONPoint {\n  type: 'Point';\n  /** Coordonnées [longitude, latitude] */\n  coordinates: [number, number];\n}\n\n/**\n * Bounds géographiques pour délimiter une zone\n */\nexport interface GeoBounds {\n  /** Coordonnée sud-ouest */\n  southwest: {\n    latitude: number;\n    longitude: number;\n  };\n  /** Coordonnée nord-est */\n  northeast: {\n    latitude: number;\n    longitude: number;\n  };\n}\n\n/**\n * Paramètres de recherche géographique\n */\nexport interface GeoSearchParams {\n  /** Centre de recherche */\n  center: {\n    latitude: number;\n    longitude: number;\n  };\n  /** Rayon de recherche en kilomètres */\n  radius?: number;\n  /** Zone de délimitation */\n  bounds?: GeoBounds;\n}\n\n// ================================\n// TYPES POUR LES FORMULAIRES\n// ================================\n\n/**\n * Données du formulaire de création d'initiative\n * (sans les champs générés automatiquement)\n */\nexport interface InitiativeFormData {\n  name: string;\n  type: InitiativeType;\n  description?: string;\n  address?: string;\n  location: {\n    latitude: number;\n    longitude: number;\n  };\n  image?: File | string;\n  website?: string;\n  phone?: string;\n  email?: string;\n  opening_hours?: OpeningHours;\n}\n\n/**\n * Données partielles pour la modification d'initiative\n */\nexport type InitiativeUpdateData = Partial<\n  Omit<Initiative, 'id' | 'created_at' | 'updated_at'>\n>;\n\n// ================================\n// TYPES POUR LES FILTRES\n// ================================\n\n/**\n * Options de filtrage des initiatives\n */\nexport interface InitiativeFilters {\n  /** Types d'initiatives à inclure */\n  types?: InitiativeType[];\n  /** Seulement les initiatives vérifiées */\n  verified_only?: boolean;\n  /** Recherche textuelle */\n  search_query?: string;\n  /** Filtrage géographique */\n  geo_filter?: GeoSearchParams;\n  /** Créées après cette date */\n  created_after?: string;\n  /** Créées avant cette date */\n  created_before?: string;\n}\n\n/**\n * Options de tri des résultats\n */\nexport interface InitiativeSortOptions {\n  /** Champ sur lequel trier */\n  field: 'created_at' | 'updated_at' | 'name' | 'distance';\n  /** Ordre de tri */\n  order: 'asc' | 'desc';\n}\n\n// ================================\n// TYPES POUR L'API\n// ================================\n\n/**\n * Réponse paginée de l'API\n */\nexport interface PaginatedResponse<T> {\n  /** Données de la page courante */\n  data: T[];\n  /** Informations de pagination */\n  pagination: {\n    /** Page courante (commence à 1) */\n    current_page: number;\n    /** Nombre d'éléments par page */\n    per_page: number;\n    /** Nombre total d'éléments */\n    total_count: number;\n    /** Nombre total de pages */\n    total_pages: number;\n    /** Lien vers la page suivante */\n    next_page?: number;\n    /** Lien vers la page précédente */\n    prev_page?: number;\n  };\n}\n\n/**\n * Réponse standard de l'API LaMap\n */\nexport interface ApiResponse<T = unknown> {\n  /** Succès de l'opération */\n  success: boolean;\n  /** Données de réponse */\n  data?: T;\n  /** Message d'information */\n  message?: string;\n  /** Détails de l'erreur */\n  error?: {\n    code: string;\n    message: string;\n    details?: Record<string, unknown>;\n  };\n}\n\n// ================================\n// TYPES POUR MAPBOX\n// ================================\n\n/**\n * Configuration de la carte Mapbox\n */\nexport interface MapConfig {\n  /** Token d'accès Mapbox */\n  accessToken: string;\n  /** Style de la carte */\n  style: string;\n  /** Centre initial */\n  center: [number, number];\n  /** Zoom initial */\n  zoom: number;\n  /** Zoom minimum */\n  minZoom?: number;\n  /** Zoom maximum */\n  maxZoom?: number;\n}\n\n/**\n * Propriétés d'un marker sur la carte\n */\nexport interface MapMarker {\n  /** Identifiant unique */\n  id: string;\n  /** Coordonnées */\n  coordinates: [number, number];\n  /** Type d'initiative pour le style */\n  type: InitiativeType;\n  /** Données complètes de l'initiative */\n  initiative: Initiative;\n}\n\n/**\n * Événement de clic sur la carte\n */\nexport interface MapClickEvent {\n  /** Coordonnées du clic */\n  coordinates: [number, number];\n  /** Initiatives à proximité du clic */\n  nearby_initiatives?: Initiative[];\n}\n\n// ================================\n// TYPES D'UTILITAIRES\n// ================================\n\n/**\n * Couleurs associées aux types d'initiatives\n */\nexport const INITIATIVE_COLORS: Record<InitiativeType, string> = {\n  Ressourcerie: '#10b981', // Vert primary\n  'Repair Café': '#f59e0b', // Orange accent\n  AMAP: '#84cc16', // Vert lime\n  \"Entreprise d'insertion\": '#3b82f6', // Bleu secondary\n  'Point de collecte': '#8b5cf6', // Violet\n  Recyclerie: '#059669', // Vert foncé\n  'Épicerie sociale': '#dc2626', // Rouge\n  'Jardin partagé': '#65a30d', // Vert nature\n  'Fab Lab': '#7c3aed', // Violet tech\n  Coopérative: '#0891b2', // Bleu cyan\n  'Monnaie locale': '#ca8a04', // Jaune doré\n  'Tiers-lieu': '#9333ea', // Violet moderne\n  Autre: '#6b7280', // Gris neutre\n} as const;\n\n/**\n * Icônes associées aux types d'initiatives (classes Lucide React)\n */\nexport const INITIATIVE_ICONS: Record<InitiativeType, string> = {\n  Ressourcerie: 'Recycle',\n  'Repair Café': 'Wrench',\n  AMAP: 'Wheat',\n  \"Entreprise d'insertion\": 'Building2',\n  'Point de collecte': 'Trash2',\n  Recyclerie: 'RefreshCw',\n  'Épicerie sociale': 'ShoppingCart',\n  'Jardin partagé': 'Flower2',\n  'Fab Lab': 'Cpu',\n  Coopérative: 'Users',\n  'Monnaie locale': 'Coins',\n  'Tiers-lieu': 'Coffee',\n  Autre: 'MapPin',\n} as const;\n\n// ================================\n// TYPES POUR LES ERREURS\n// ================================\n\n/**\n * Codes d'erreur spécifiques à LaMap\n */\nexport enum ErrorCode {\n  // Erreurs génériques\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  NETWORK_ERROR = 'NETWORK_ERROR',\n\n  // Erreurs d'authentification\n  UNAUTHORIZED = 'UNAUTHORIZED',\n  FORBIDDEN = 'FORBIDDEN',\n\n  // Erreurs de données\n  NOT_FOUND = 'NOT_FOUND',\n  DUPLICATE_ENTRY = 'DUPLICATE_ENTRY',\n\n  // Erreurs géographiques\n  GEOCODING_FAILED = 'GEOCODING_FAILED',\n  INVALID_COORDINATES = 'INVALID_COORDINATES',\n\n  // Erreurs Mapbox\n  MAPBOX_TOKEN_INVALID = 'MAPBOX_TOKEN_INVALID',\n  MAPBOX_RATE_LIMIT = 'MAPBOX_RATE_LIMIT',\n\n  // Erreurs Supabase\n  SUPABASE_CONNECTION_ERROR = 'SUPABASE_CONNECTION_ERROR',\n  RLS_POLICY_VIOLATION = 'RLS_POLICY_VIOLATION',\n}\n\n/**\n * Erreur personnalisée pour LaMap\n */\nexport class LaMapError extends Error {\n  constructor(\n    public code: ErrorCode,\n    message: string,\n    public details?: Record<string, unknown>\n  ) {\n    super(message);\n    this.name = 'LaMapError';\n  }\n}\n"],"names":["ErrorCode","INITIATIVE_COLORS","INITIATIVE_ICONS","LaMapError","Ressourcerie","AMAP","Recyclerie","Coopérative","Autre","Error","code","message","details","name"],"mappings":"AAAA;;;;;CAKC,GAED,mCAAmC;AACnC,mBAAmB;AACnB,mCAAmC;AAEnC;;CAEC;;;;;;;;;;;QA+VWA;eAAAA;;QA1CCC;eAAAA;;QAmBAC;eAAAA;;QAqDAC;eAAAA;;;AAxEN,MAAMF,oBAAoD;IAC/DG,cAAc;IACd,eAAe;IACfC,MAAM;IACN,0BAA0B;IAC1B,qBAAqB;IACrBC,YAAY;IACZ,oBAAoB;IACpB,kBAAkB;IAClB,WAAW;IACXC,aAAa;IACb,kBAAkB;IAClB,cAAc;IACdC,OAAO;AACT;AAKO,MAAMN,mBAAmD;IAC9DE,cAAc;IACd,eAAe;IACfC,MAAM;IACN,0BAA0B;IAC1B,qBAAqB;IACrBC,YAAY;IACZ,oBAAoB;IACpB,kBAAkB;IAClB,WAAW;IACXC,aAAa;IACb,kBAAkB;IAClB,cAAc;IACdC,OAAO;AACT;AASO,IAAA,AAAKR,mCAAAA;IACV,qBAAqB;;;;IAKrB,6BAA6B;;;IAI7B,qBAAqB;;;IAIrB,wBAAwB;;;IAIxB,iBAAiB;;;IAIjB,mBAAmB;;;WAtBTA;;AA8BL,MAAMG,mBAAmBM;IAC9B,YACE,AAAOC,IAAe,EACtBC,OAAe,EACf,AAAOC,OAAiC,CACxC;QACA,KAAK,CAACD,eAJCD,OAAAA,WAEAE,UAAAA;QAGP,IAAI,CAACC,IAAI,GAAG;IACd;AACF"}