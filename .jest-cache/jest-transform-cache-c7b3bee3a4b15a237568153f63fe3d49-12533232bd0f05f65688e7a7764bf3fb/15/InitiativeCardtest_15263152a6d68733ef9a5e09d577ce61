1bb9a6efa14f9dbca1c16621ecf46435
"use strict";
// Mock Supabase client
jest.mock('@/lib/supabase/client', ()=>({
        createClient: jest.fn(()=>({
                auth: {
                    getUser: jest.fn(()=>Promise.resolve({
                            data: {
                                user: null
                            },
                            error: null
                        }))
                }
            }))
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _InitiativeCard = /*#__PURE__*/ _interop_require_default(require("../../components/Initiative/InitiativeCard"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const mockInitiative = {
    id: '123e4567-e89b-12d3-a456-426614174000',
    name: 'Ressourcerie de Belleville',
    type: 'Ressourcerie',
    description: 'Une ressourcerie engagée pour le réemploi',
    address: '12 rue de Belleville, 75020 Paris',
    location: {
        type: 'Point',
        coordinates: [
            2.3894,
            48.8724
        ]
    },
    verified: true,
    image_url: 'https://example.com/image.jpg',
    website: 'https://ressourcerie-belleville.fr',
    phone: '01 23 45 67 89',
    email: 'contact@ressourcerie-belleville.fr',
    opening_hours: {
        monday: {
            open: '09:00',
            close: '18:00'
        },
        tuesday: {
            open: '09:00',
            close: '18:00'
        },
        wednesday: null,
        thursday: {
            open: '09:00',
            close: '18:00'
        },
        friday: {
            open: '09:00',
            close: '18:00'
        },
        saturday: {
            open: '10:00',
            close: '17:00'
        },
        sunday: null
    },
    user_id: 'user-123',
    created_at: '2024-01-15T10:00:00Z',
    updated_at: '2024-01-15T10:00:00Z'
};
describe('InitiativeCard', ()=>{
    it('displays basic initiative information', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative
        }));
        expect(_react.screen.getByText('Ressourcerie de Belleville')).toBeInTheDocument();
        expect(_react.screen.getByText('Ressourcerie')).toBeInTheDocument();
        expect(_react.screen.getByText(/Une ressourcerie engagée/)).toBeInTheDocument();
    });
    it('displays address when present', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative
        }));
        expect(_react.screen.getByText(/12 rue de Belleville/)).toBeInTheDocument();
    });
    it('displays "Verified" badge for verified initiatives', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative
        }));
        // The badge shows "Vérifiée" (feminine form for "initiative")
        expect(_react.screen.getByText('Vérifiée')).toBeInTheDocument();
    });
    it('does not display "Verified" badge for unverified initiatives', ()=>{
        const unverifiedInitiative = {
            ...mockInitiative,
            verified: false
        };
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: unverifiedInitiative
        }));
        expect(_react.screen.queryByText('Vérifiée')).not.toBeInTheDocument();
    });
    it('displays contact links when present', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative
        }));
        const websiteLink = _react.screen.getByRole('link', {
            name: /site web/i
        });
        expect(websiteLink).toHaveAttribute('href', 'https://ressourcerie-belleville.fr');
        expect(websiteLink).toHaveAttribute('target', '_blank');
        expect(websiteLink).toHaveAttribute('rel', 'noopener noreferrer');
    });
    it('displays phone and email as accessible links', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative
        }));
        // Phone and email are displayed as icon links with title attributes
        const phoneLink = _react.screen.getByTitle('Appeler');
        expect(phoneLink).toHaveAttribute('href', 'tel:01 23 45 67 89');
        const emailLink = _react.screen.getByTitle('Envoyer un email');
        expect(emailLink).toHaveAttribute('href', 'mailto:contact@ressourcerie-belleville.fr');
    });
    it('handles card click to display more details', ()=>{
        const onClickMock = jest.fn();
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative,
            onClick: onClickMock
        }));
        // Card with onClick becomes a button role for accessibility
        const card = _react.screen.getByRole('button');
        _react.fireEvent.click(card);
        expect(onClickMock).toHaveBeenCalledTimes(1);
        expect(onClickMock).toHaveBeenCalledWith(mockInitiative);
    });
    it('displays image when present', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative
        }));
        const image = _react.screen.getByAltText('Ressourcerie de Belleville');
        expect(image).toBeInTheDocument();
        expect(image).toHaveAttribute('src');
    });
    it('handles missing optional information', ()=>{
        const minimalInitiative = {
            id: '123',
            name: 'Initiative minimale',
            type: 'Autre',
            location: {
                type: 'Point',
                coordinates: [
                    2.3522,
                    48.8566
                ]
            },
            verified: false,
            created_at: '2024-01-15T10:00:00Z',
            updated_at: '2024-01-15T10:00:00Z'
        };
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: minimalInitiative
        }));
        expect(_react.screen.getByText('Initiative minimale')).toBeInTheDocument();
        expect(_react.screen.getByText('Autre')).toBeInTheDocument();
        expect(_react.screen.queryByText(/http/)).not.toBeInTheDocument();
    });
    it('applies custom CSS classes', ()=>{
        const { container } = (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative,
            className: "custom-class"
        }));
        const card = container.querySelector('.custom-class');
        expect(card).toBeInTheDocument();
    });
    it('displays opening hours when detailed variant is used', ()=>{
        // Opening hours are shown in detailed variant (e.g., in popup/modal)
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative,
            variant: "detailed"
        }));
        // Detailed variant shows opening hours section
        expect(_react.screen.getByText(/Horaires/i)).toBeInTheDocument();
        expect(_react.screen.getByText(/Lundi/i)).toBeInTheDocument();
        expect(_react.screen.getByText(/09:00 - 18:00/)).toBeInTheDocument();
    });
    it('is accessible with appropriate semantic structure', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_InitiativeCard.default, {
            initiative: mockInitiative
        }));
        // Without onClick, card is a simple div container
        // With onClick, it becomes a button with proper accessibility
        const heading = _react.screen.getByRole('heading', {
            name: 'Ressourcerie de Belleville'
        });
        expect(heading).toBeInTheDocument();
        // Image has proper alt text
        const image = _react.screen.getByAltText('Ressourcerie de Belleville');
        expect(image).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,